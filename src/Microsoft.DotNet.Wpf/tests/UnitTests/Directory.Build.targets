<Project>
  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.targets', '$(MSBuildThisFileDirectory)../'))" />

  <PropertyGroup>
    <_PackagingNativePath Condition="'$(WpfRuntimeIdentifier)'=='win-x64' And '$(Configuration)' != 'Debug'">$(ArtifactsDir)packaging\$(Configuration)\x64\Microsoft.DotNet.Wpf.GitHub</_PackagingNativePath>
    <_PackagingNativePath Condition="'$(WpfRuntimeIdentifier)'=='win-x64' And '$(Configuration)' == 'Debug'">$(ArtifactsDir)packaging\$(Configuration)\x64\Microsoft.DotNet.Wpf.GitHub.Debug</_PackagingNativePath>
    <_PackagingNativePath Condition="'$(WpfRuntimeIdentifier)'=='win-x86' And '$(Configuration)' != 'Debug'">$(ArtifactsDir)packaging\$(Configuration)\Microsoft.DotNet.Wpf.GitHub</_PackagingNativePath>
    <_PackagingNativePath Condition="'$(WpfRuntimeIdentifier)'=='win-x86' And '$(Configuration)' == 'Debug'">$(ArtifactsDir)packaging\$(Configuration)\Microsoft.DotNet.Wpf.GitHub.Debug</_PackagingNativePath>
  </PropertyGroup>

  <!--
    We need to copy the native dependencies from the packaging folder to make sure that we use the ones built or redistributed in the current build.
  -->
  <Target Name="IncludeNativeDependencies"
          BeforeTargets="AssignTargetPaths"
          Returns="@(None)">
    <ItemGroup>
      <!-- These exist to ensure that dependencies (esp. native ones) are binplaced with tests correctly -->
      <None Include="$(_PackagingNativePath)\runtimes\$(WpfRuntimeIdentifier)\native\*.dll"
            CopyToOutputDirectory="PreserveNewest"
            Visible="False" />
    </ItemGroup>
  </Target>

  <!--
   Referencing packages that reference the desktop package causes grief with building internally. Currently this
   is only happening with referencing StaFact (for [WpfFact] tests). Remove the reference if it comes in directly
   or transitively.
  -->
  <Target Name="RemoveDesktopFramework" AfterTargets="ProcessFrameworkReferences" BeforeTargets="FixupRuntimeFrameworkVersions">
    <ItemGroup>
      <RuntimeFramework Remove="@(RuntimeFramework)" Condition="'%(RuntimeFramework.Identity)' == 'Microsoft.WindowsDesktop.App'"/>
    </ItemGroup>
  </Target>

  <!-- See RemoveDesktopFramework above -->
  <Target Name="RemoveTransitiveDesktopFramework" AfterTargets="ResolvePackageAssets" BeforeTargets="AddTransitiveFrameworkReferences">
    <ItemGroup>
      <TransitiveFrameworkReference Remove="@(TransitiveFrameworkReference)" Condition="'%(TransitiveFrameworkReference.Identity)' == 'Microsoft.WindowsDesktop.App'"/>
    </ItemGroup>
  </Target>
</Project>
