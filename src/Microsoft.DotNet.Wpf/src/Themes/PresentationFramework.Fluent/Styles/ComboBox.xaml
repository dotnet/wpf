<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
    
    Based on Microsoft XAML for Win UI
    Copyright (c) Microsoft Corporation. All Rights Reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <!-- Deprecated .NET 9 Keys -->
        <Thickness x:Key="ComboBoxAccentBorderThemeThickness">0,0,0,2</Thickness>
        <Thickness x:Key="ComboBoxChevronMargin">8,0,10,0</Thickness>
        <!-- Redefined in .NET 10 -->
            <!-- <Thickness x:Key="ComboBoxPadding">10,8,10,8</Thickness>
            <system:Double x:Key="ComboBoxChevronSize">11</system:Double> -->

    <Thickness x:Key="ComboBoxPadding">12,5,0,7</Thickness>
    <Thickness x:Key="ComboBoxEditableTextPadding">11,5,38,6</Thickness>
    <Thickness x:Key="ComboBoxBorderThemeThickness">1,1,1,1</Thickness>
    <system:Double x:Key="ComboBoxChevronSize">10</system:Double>
    <system:Double x:Key="ComboBoxPopupMinHeight">32.0</system:Double>
    <system:String x:Key="ComboBoxChevronDownGlyph">&#xE70D;</system:String>    
    <CornerRadius x:Key="ComboBoxDropDownButtonBackgroundCornerRadius">4</CornerRadius>

    <Thickness x:Key="ComboBoxItemMargin">3,2,3,0</Thickness>
    <Thickness x:Key="ComboBoxItemContentMargin">10,8,8,8</Thickness>

    <Style x:Key="DefaultComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
        <Setter Property="CaretBrush" Value="{DynamicResource TextControlForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="MinHeight" Value="{DynamicResource TextBoxThemeMinHeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextControlSelectionHighlightColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border
                            x:Name="ContentBorder"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}" />

                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="{TemplateBinding BorderThickness}"
                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                            Padding="{TemplateBinding Padding}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- Disabling this setter as this will be handled by the ComboBox style. -->
                            <!--<Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}" />-->
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushPointerOver}" />
                            <Setter TargetName="PART_ContentHost" Property="Foreground" Value="{DynamicResource TextControlForegroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ContentBorder" Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThicknessFocused}" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource TextControlBackgroundFocused}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}" />
                            <Setter TargetName="PART_ContentHost" Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushDisabled}" />
                            <Setter TargetName="PART_ContentHost" Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="ContentBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter
                            x:Name="PART_ContentHost"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="{StaticResource ComboBoxItemMargin}" />
        <Setter Property="Padding" Value="{StaticResource ComboBoxItemContentMargin}" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border
                            Name="ContentBorder"
                            Margin="{TemplateBinding Margin}"
                            Padding="0"
                            VerticalAlignment="Stretch"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <ContentPresenter
                                    x:Name="PART_ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center" />
                                <Rectangle
                                    x:Name="ActiveRectangle"
                                    Width="3"
                                    Height="16"
                                    Margin="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Fill="{DynamicResource ComboBoxItemPillFillBrush}"
                                    RadiusX="2"
                                    RadiusY="2"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ComboBoxItemBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ActiveRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxItemForegroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DefaultComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="LayoutGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="38" />
            </Grid.ColumnDefinitions>

            <Border x:Name="ContentBorder"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}" />

            <ContentPresenter Name="PART_ContentPresenter"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              Margin="{TemplateBinding Padding}"
                              TextElement.Foreground="{TemplateBinding Foreground}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              IsHitTestVisible="False" />

            <ToggleButton x:Name="ToggleButton"
                          Grid.ColumnSpan="2"
                          Focusable="False"
                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource DefaultComboBoxToggleButtonStyle}" />

            <TextBlock x:Name="ChevronIcon"
                       Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       IsHitTestVisible="False"
                       RenderTransformOrigin="0.5,0.5"
                       FontFamily="{DynamicResource SymbolThemeFontFamily}"
                       FontSize="{StaticResource ComboBoxChevronSize}"
                       Text="{StaticResource ComboBoxChevronDownGlyph}">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="0" />
                </TextBlock.RenderTransform>
            </TextBlock>
            
            <Popup x:Name="PART_Popup"
                   MinWidth="{TemplateBinding ActualWidth}"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="{TemplateBinding Popup.Placement}"
                   PopupAnimation="{TemplateBinding Popup.PopupAnimation}"
                   VerticalOffset="1">
                <Border x:Name="DropDownBorder"
                        Padding="0,4,0,6"
                        Background="{DynamicResource ComboBoxDropDownBackground}"
                        BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}"
                        BorderThickness="1.5"
                        CornerRadius="{DynamicResource PopupCornerRadius}"
                        SnapsToDevicePixels="True">
                    <Border.RenderTransform>
                        <TranslateTransform />
                    </Border.RenderTransform>
                    <Grid>
                        <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      SnapsToDevicePixels="True"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      TextElement.FontSize="{TemplateBinding FontSize}"
                                      TextElement.FontWeight="{TemplateBinding FontWeight}"
                                      TextElement.Foreground="{TemplateBinding Foreground}">
                            <ItemsPresenter
                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </Grid>
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="20"
                                          Direction="270"
                                          Opacity="0.25"
                                          ShadowDepth="6" />
                    </Border.Effect>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ChevronIcon"
                                Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                                From="0"
                                To="180"
                                Duration="00:00:00.167" />
                            <DoubleAnimation
                                Storyboard.TargetName="DropDownBorder"
                                Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                From="-90"
                                To="0"
                                Duration="00:00:00.167">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ChevronIcon"
                                Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                                From="180"
                                To="0"
                                Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="{StaticResource ComboBoxPopupMinHeight}" />
            </Trigger>

            <Trigger SourceName="PART_Popup" Property="Popup.AllowsTransparency" Value="False">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
            </Trigger>

            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>

            <!--PointerOver state-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ComboBoxBackgroundPointerOver}" />
                <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushPointerOver}" />
                <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundPointerOver}" />
            </Trigger>

            <!--Pressed state-->
            <Trigger SourceName="ToggleButton" Property="IsPressed" Value="True">
                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ComboBoxBackgroundPressed}" />
                <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushPressed}" />
                <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundPressed}" />                
            </Trigger>

            <!--Focused state-->
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundFocused}" />
                <Setter TargetName="ChevronIcon" Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocused}" />
            </Trigger>

            <!--FocusedPressed state-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" />
                    <Condition SourceName="ToggleButton" Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundFocusedPressed}" />
                <Setter TargetName="ChevronIcon" Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocusedPressed}" />
            </MultiTrigger>

            <!--Disabled state-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ComboBoxBackgroundDisabled}" />
                <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushDisabled}" />
                <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
                <Setter TargetName="ChevronIcon" Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="EditableComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="LayoutGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="38" />
            </Grid.ColumnDefinitions>

            <Border x:Name="ContentBorder"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}" />

            <TextBox x:Name="PART_EditableTextBox"
                     Grid.ColumnSpan="2"
                     Padding="11,5,38,6"
                     Foreground="{TemplateBinding Foreground}"
                     FontSize="{TemplateBinding FontSize}"
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Style="{StaticResource DefaultComboBoxTextBoxStyle}"
                     AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" />

            <Border x:Name="DropDownOverlay"
                    Grid.Column="1"
                    Margin="4"
                    Width="30"
                    Background="Transparent"
                    CornerRadius="{StaticResource ComboBoxDropDownButtonBackgroundCornerRadius}" />
            
            <ToggleButton x:Name="ToggleButton"
                          Grid.Column="1"
                          Margin="4"
                          Focusable="False"
                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource DefaultComboBoxToggleButtonStyle}" />

            <TextBlock x:Name="ChevronIcon"
                       Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       IsHitTestVisible="False"
                       RenderTransformOrigin="0.5,0.5"
                       FontFamily="{DynamicResource SymbolThemeFontFamily}"
                       FontSize="{StaticResource ComboBoxChevronSize}"
                       Text="{StaticResource ComboBoxChevronDownGlyph}">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="0" />
                </TextBlock.RenderTransform>
            </TextBlock>

            <Popup x:Name="PART_Popup"
                   Focusable="False"
                   AllowsTransparency="True"
                   MinWidth="{TemplateBinding ActualWidth}"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="{TemplateBinding Popup.Placement}"
                   PopupAnimation="{TemplateBinding Popup.PopupAnimation}"
                   VerticalOffset="1">
                <Border x:Name="DropDownBorder"
                        Padding="0,4,0,6"
                        BorderThickness="1.5"
                        Background="{DynamicResource ComboBoxDropDownBackground}"
                        BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}"
                        CornerRadius="{DynamicResource PopupCornerRadius}"
                        SnapsToDevicePixels="True">
                    <Border.RenderTransform>
                        <TranslateTransform />
                    </Border.RenderTransform>
                    <Grid>
                        <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      SnapsToDevicePixels="True"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      TextElement.FontSize="{TemplateBinding FontSize}"
                                      TextElement.FontWeight="{TemplateBinding FontWeight}"
                                      TextElement.Foreground="{TemplateBinding Foreground}">
                            <ItemsPresenter
                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </Grid>
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="20"
                                          Direction="270"
                                          Opacity="0.25"
                                          ShadowDepth="6" />
                    </Border.Effect>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ChevronIcon"
                                Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                                From="0"
                                To="180"
                                Duration="00:00:00.167" />
                            <DoubleAnimation
                                Storyboard.TargetName="DropDownBorder"
                                Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                From="-90"
                                To="0"
                                Duration="00:00:00.167">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ChevronIcon"
                                Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                                From="180"
                                To="0"
                                Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="{StaticResource ComboBoxPopupMinHeight}" />
            </Trigger>

            <Trigger SourceName="PART_Popup" Property="Popup.AllowsTransparency" Value="False">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
            </Trigger>

            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>

            <!-- PointerOver state-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ComboBoxBackgroundPointerOver}" />
                <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushPointerOver}" />
                <Setter TargetName="PART_EditableTextBox" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundPointerOver}" />
            </Trigger>

            <!-- Focused / TextBoxFocused -->
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="PART_EditableTextBox" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundFocused}" />
                <Setter TargetName="ChevronIcon" Property="Foreground" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}" />
            </Trigger>

            <!--TextBoxOverlayPointerOver state-->
            <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                <Setter TargetName="DropDownOverlay" Property="Background" Value="{DynamicResource ComboBoxDropDownBackgroundPointerOver}" />
            </Trigger>

            <!--TextBoxOverlayPressed-->
            <Trigger SourceName="ToggleButton" Property="IsPressed" Value="True">
                <Setter TargetName="DropDownOverlay" Property="Background" Value="{DynamicResource ComboBoxDropDownBackgroundPointerPressed}" />
            </Trigger>

            <!--TextBoxFocusedOverlayPointerOver state-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" />
                    <Condition SourceName="ToggleButton" Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="DropDownOverlay" Property="Background" Value="{DynamicResource ComboBoxDropDownBackgroundPointerOver}" />
                <Setter TargetName="ChevronIcon" Property="Foreground" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}" />
            </MultiTrigger>

            <!-- FocusedPressed state / TextBoxFocusedOverlayPressed state -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" />
                    <Condition SourceName="ToggleButton" Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ChevronIcon" Property="Foreground" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}" />
                <Setter TargetName="PART_EditableTextBox" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundFocusedPressed}" />
                <Setter TargetName="DropDownOverlay" Property="Background" Value="{DynamicResource ComboBoxFocusedDropDownBackgroundPointerPressed}" />
            </MultiTrigger>

            <!--Disabled state-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ComboBoxBackgroundDisabled}" />
                <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushDisabled}" />
                <Setter TargetName="PART_EditableTextBox" Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
                <Setter TargetName="ChevronIcon" Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
 
    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThemeThickness}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
        <Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Popup.PopupAnimation" Value="None" />
        <Setter Property="Popup.Placement" Value="Bottom" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource DefaultComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="Template" Value="{StaticResource EditableComboBoxTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}" />
    <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="{x:Type ComboBox}" />

</ResourceDictionary>
