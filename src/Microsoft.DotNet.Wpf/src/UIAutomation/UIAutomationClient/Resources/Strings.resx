<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Assembly0NotFound" xml:space="preserve">
    <value>'{0}' assembly not found.</value>
  </data>
  <data name="AtLeastOnePropertyMustBeSpecified" xml:space="preserve">
    <value>Must specify at least one property for AddAutomationPropertyChangedHandler.</value>
  </data>
  <data name="CachedPropertyNotRequested" xml:space="preserve">
    <value>Cannot request a property or pattern that is not cached.</value>
  </data>
  <data name="CacheReqestCanOnlyPopTop" xml:space="preserve">
    <value>CacheRequest.Pop was called on a CacheRequest that was not the current top-of-stack request.</value>
  </data>
  <data name="CacheReqestCantModifyWhileActive" xml:space="preserve">
    <value>Cannot modify a CacheRequest while it is active on any thread.</value>
  </data>
  <data name="CacheRequestNeedCache" xml:space="preserve">
    <value>Cannot access cached properties on a pattern returned from GetCurrentPattern.</value>
  </data>
  <data name="CacheRequestNeedElementReference" xml:space="preserve">
    <value>Cannot perform this operation on an AutomationElement that contains only cached data. The requested operation requires a Full or Lightweight reference.</value>
  </data>
  <data name="CacheRequestNeedLiveForProperties" xml:space="preserve">
    <value>Cannot access current properties on a pattern that contains only cached data.</value>
  </data>
  <data name="CantPrefetchTextPattern" xml:space="preserve">
    <value>Text pattern cannot be cached.</value>
  </data>
  <data name="CouldNotFindRegisterMethodOnType0InAssembly1" xml:space="preserve">
    <value>Cannot find Register method on type '{0}' in assembly '{1}'.</value>
  </data>
  <data name="CouldNotFindType0InAssembly1" xml:space="preserve">
    <value>Cannot find type '{0}' in assembly '{1}'.</value>
  </data>
  <data name="EventIdMustNotBeAutomationFocusChanged" xml:space="preserve">
    <value>eventId not valid. Use AddAutomationFocusChangedEventHandler to listen for focus changes.</value>
  </data>
  <data name="EventIdMustNotBeAutomationPropertyChanged" xml:space="preserve">
    <value>eventId not valid. Use AddAutomationPropertyChangedEventHandler to listen for property changes.</value>
  </data>
  <data name="EventIdMustNotBeStructureChanged" xml:space="preserve">
    <value>eventId not valid. Use AddStructureChangedEventHandler to listen for tree structure changes.</value>
  </data>
  <data name="GenericInvalidArgument" xml:space="preserve">
    <value>'{0}' is not a valid type or is not a valid value.</value>
  </data>
  <data name="HwndMustBeNonNULL" xml:space="preserve">
    <value>hwnd cannot be IntPtr.Zero or null.</value>
  </data>
  <data name="IgnoreCaseRequiresString" xml:space="preserve">
    <value>IgnoreCase flag can only be used with string arguments.</value>
  </data>
  <data name="LogicalElementNoClickablePoint" xml:space="preserve">
    <value>The AutomationElement has no clickable point.</value>
  </data>
  <data name="MustBeAtLeastTwoConditions" xml:space="preserve">
    <value>Must specify at least two conditions.</value>
  </data>
  <data name="NonclientClassnameCannotBeUsedWithFlagsOrImagename" xml:space="preserve">
    <value>#nonclient classname cannot be used with flags or image name.</value>
  </data>
  <data name="OperationCannotBePerformed" xml:space="preserve">
    <value>Operation cannot be performed.</value>
  </data>
  <data name="ParamsNotApplicableToWindowClosedEvent" xml:space="preserve">
    <value>WindowClosed event is only applicable to RootElement and TreeScope.Subtree or an element that implements WindowPattern.</value>
  </data>
  <data name="PropertyConditionIncorrectType" xml:space="preserve">
    <value>PropertyCondition value for property '{0}' must be '{1}'.</value>
  </data>
  <data name="ScreenCoordinatesOutsideBoundingRect" xml:space="preserve">
    <value>Screen coordinate is outside the bounding rectangle.</value>
  </data>
  <data name="SetFocusFailed" xml:space="preserve">
    <value>Target element cannot receive focus.</value>
  </data>
  <data name="TextAttributeValueWrongType" xml:space="preserve">
    <value>'{0}' text attribute value is type '{1}', but expected type '{2}'.</value>
  </data>
  <data name="TextMustNotBeNullOrEmpty" xml:space="preserve">
    <value>Text argument cannot be a null or empty string.</value>
  </data>
  <data name="TreeScopeElementChildrenDescendantsOnly" xml:space="preserve">
    <value>Only TreeScope.Element, TreeScope.Children, and TreeScope.Descendants are valid for this call.</value>
  </data>
  <data name="TreeScopeNeedAtLeastOne" xml:space="preserve">
    <value>Must specify at least one of TreeScope.Element, TreeScope.Children, or TreeScope.Descendants.</value>
  </data>
  <data name="UnexpectedWindowState" xml:space="preserve">
    <value>Unrecognized WindowVisualState value.</value>
  </data>
  <data name="UnknownCoreAPIError" xml:space="preserve">
    <value>Unrecognized error.</value>
  </data>
  <data name="UnsupportedAttribute" xml:space="preserve">
    <value>Unsupported TextAttribute.</value>
  </data>
  <data name="UnsupportedPattern" xml:space="preserve">
    <value>Unsupported Pattern.</value>
  </data>
  <data name="UnsupportedProperty" xml:space="preserve">
    <value>Unsupported Property.</value>
  </data>
  <data name="ValueReadonly" xml:space="preserve">
    <value>Value is read-only.</value>
  </data>
</root>