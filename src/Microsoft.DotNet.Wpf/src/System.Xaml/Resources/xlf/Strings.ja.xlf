<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ja" original="../Strings.resx">
    <body>
      <trans-unit id="APSException">
        <source>Enumerating attached properties on object '{0}' threw an exception.</source>
        <target state="new">Enumerating attached properties on object '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="AddCollection">
        <source>Add value to collection of type '{0}' threw an exception.</source>
        <target state="new">Add value to collection of type '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="AddDictionary">
        <source>Add value to dictionary of type '{0}' threw an exception.</source>
        <target state="new">Add value to dictionary of type '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="AmbiguousCollectionItemType">
        <source>Cannot determine the item type of collection type '{0}' because it has more than one Add method or ICollection&lt;T&gt; implementation. To make this collection type usable in XAML, add a public Add(object) method, implement System.Collections.IList or a single System.Collections.Generic.ICollection&lt;T&gt;.</source>
        <target state="new">Cannot determine the item type of collection type '{0}' because it has more than one Add method or ICollection&lt;T&gt; implementation. To make this collection type usable in XAML, add a public Add(object) method, implement System.Collections.IList or a single System.Collections.Generic.ICollection&lt;T&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="AmbiguousDictionaryItemType">
        <source>Cannot determine the item type of dictionary type '{0}' because it has more than one Add method or IDictionary&lt;K,V&gt; implementation. To make this dictionary type usable in XAML, add a public Add(object,object) method, implement System.Collections.IDictionary or a single System.Collections.Generic.IDictionary&lt;K,V&gt;.</source>
        <target state="new">Cannot determine the item type of dictionary type '{0}' because it has more than one Add method or IDictionary&lt;K,V&gt; implementation. To make this dictionary type usable in XAML, add a public Add(object,object) method, implement System.Collections.IDictionary or a single System.Collections.Generic.IDictionary&lt;K,V&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="ArgumentRequired">
        <source>One of the following arguments must be non-null: '{0}'.</source>
        <target state="new">One of the following arguments must be non-null: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ArrayAddNotImplemented">
        <source>Array Add method is not implemented.</source>
        <target state="new">Array Add method is not implemented.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyTagMissing">
        <source>Part between semicolon ';' and equals sign '=' is not '{0}' URI '{1}'.</source>
        <target state="new">Part between semicolon ';' and equals sign '=' is not '{0}' URI '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AttachableEventNotImplemented">
        <source>Attachable events are not implemented.</source>
        <target state="new">Attachable events are not implemented.</target>
        <note />
      </trans-unit>
      <trans-unit id="AttachableMemberNotFound">
        <source>Attachable member '{0}' was not found.</source>
        <target state="new">Attachable member '{0}' was not found.</target>
        <note />
      </trans-unit>
      <trans-unit id="AttachedPropOnFwdRefTC">
        <source>Cannot set property '{0}' on object '{1}' because the object is a forward or incompletely initialized reference. The unresolved name(s) are: '{2}'.</source>
        <target state="new">Cannot set property '{0}' on object '{1}' because the object is a forward or incompletely initialized reference. The unresolved name(s) are: '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AttachedPropertyOnDictionaryKey">
        <source>An attachable property named '{1}' is attached on a dictionary key '{0}' that is either a string or can be type-converted to string, which is not supported.</source>
        <target state="new">An attachable property named '{1}' is attached on a dictionary key '{0}' that is either a string or can be type-converted to string, which is not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="AttachedPropertyOnTypeConvertedOrStringProperty">
        <source>An attachable property named '{2}' is attached to a property named '{1}'.  The property named '{1}' is either a string or can be type-converted to string; attaching on such properties are not supported.  For debugging, the property '{1}' contains an object '{0}'.</source>
        <target state="new">An attachable property named '{2}' is attached to a property named '{1}'.  The property named '{1}' is either a string or can be type-converted to string; attaching on such properties are not supported.  For debugging, the property '{1}' contains an object '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AttributeUnhandledKind">
        <source>An unhandled scanner attribute was encountered.</source>
        <target state="new">An unhandled scanner attribute was encountered.</target>
        <note />
      </trans-unit>
      <trans-unit id="BadInternalsVisibleTo1">
        <source>One of the InternalsVisibleToAttribute values in assembly '{0}' is not a valid assembly name. Use the format 'AssemblyShortName' or 'AssemblyShortName, PublicKey=...'.</source>
        <target state="new">One of the InternalsVisibleToAttribute values in assembly '{0}' is not a valid assembly name. Use the format 'AssemblyShortName' or 'AssemblyShortName, PublicKey=...'.</target>
        <note />
      </trans-unit>
      <trans-unit id="BadInternalsVisibleTo2">
        <source>InternalsVisibleToAttribute value '{0}' in assembly '{1}' is not a valid assembly name. Use the format 'AssemblyShortName' or 'AssemblyShortName, PublicKey=...'.</source>
        <target state="new">InternalsVisibleToAttribute value '{0}' in assembly '{1}' is not a valid assembly name. Use the format 'AssemblyShortName' or 'AssemblyShortName, PublicKey=...'.</target>
        <note />
      </trans-unit>
      <trans-unit id="BadMethod">
        <source>Bad method '{0}' on '{1}'.</source>
        <target state="new">Bad method '{0}' on '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="BadStateObjectWriter">
        <source>Bad state in ObjectWriter. Non directive missing instance.</source>
        <target state="new">Bad state in ObjectWriter. Non directive missing instance.</target>
        <note />
      </trans-unit>
      <trans-unit id="BadXmlnsCompat">
        <source>An XmlnsCompatibleWithAttribute in assembly '{0}' is missing a required property. Set both the NewNamespace and OldNamespace properties, or remove the XmlnsCompatibleWithAttribute.</source>
        <target state="new">An XmlnsCompatibleWithAttribute in assembly '{0}' is missing a required property. Set both the NewNamespace and OldNamespace properties, or remove the XmlnsCompatibleWithAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="BadXmlnsDefinition">
        <source>An XmlnsDefinitionAttribute in assembly '{0}' is missing a required property. Set both the ClrNamespace and XmlNamespace properties, or remove the XmlnsDefinitionAttribute.</source>
        <target state="new">An XmlnsDefinitionAttribute in assembly '{0}' is missing a required property. Set both the ClrNamespace and XmlNamespace properties, or remove the XmlnsDefinitionAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="BadXmlnsPrefix">
        <source>An XmlnsPrefixAttribute in assembly '{0}' is missing a required property. Set both the Prefix and XmlNamespace properties, or remove the XmlnsPrefixAttribute.</source>
        <target state="new">An XmlnsPrefixAttribute in assembly '{0}' is missing a required property. Set both the Prefix and XmlNamespace properties, or remove the XmlnsPrefixAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="BuilderStackNotEmptyOnClose">
        <source>Builder Stack is not empty when end of XamlNode stream was reached.</source>
        <target state="new">Builder Stack is not empty when end of XamlNode stream was reached.</target>
        <note />
      </trans-unit>
      <trans-unit id="CanConvertFromFailed">
        <source>Failed to check convertibility from type '{0}' using '{1}'. This generally indicates an incorrectly implemented TypeConverter.</source>
        <target state="new">Failed to check convertibility from type '{0}' using '{1}'. This generally indicates an incorrectly implemented TypeConverter.</target>
        <note />
      </trans-unit>
      <trans-unit id="CanConvertToFailed">
        <source>Failed to check convertibility to type '{0}' using '{1}'. This generally indicates an incorrectly implemented TypeConverter.</source>
        <target state="new">Failed to check convertibility to type '{0}' using '{1}'. This generally indicates an incorrectly implemented TypeConverter.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotAddPositionalParameters">
        <source>In markup extensions, all constructor argument values should be atoms.  For the object of type '{0}', one or more argument values are not atomic.</source>
        <target state="new">In markup extensions, all constructor argument values should be atoms.  For the object of type '{0}', one or more argument values are not atomic.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotCreateBadEventDelegate">
        <source>Cannot create an instance of '{0}' because XamlType is not valid.</source>
        <target state="new">Cannot create an instance of '{0}' because XamlType is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotCreateBadType">
        <source>Cannot create an instance of '{0}' because XamlType is not valid.</source>
        <target state="new">Cannot create an instance of '{0}' because XamlType is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotFindAssembly">
        <source>Cannot find Assembly '{0}' in URI '{1}'.</source>
        <target state="new">Cannot find Assembly '{0}' in URI '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotReassignSchemaContext">
        <source>Cannot reassign a previously set SchemaContext.</source>
        <target state="new">Cannot reassign a previously set SchemaContext.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotResolveTypeForFactoryMethod">
        <source>Cannot resolve type '{0}' for method '{1}'.</source>
        <target state="new">Cannot resolve type '{0}' for method '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotSetBaseUri">
        <source>BaseUri can only be set once at the root node (XamlXmlReader may provide a default at the root node).</source>
        <target state="new">BaseUri can only be set once at the root node (XamlXmlReader may provide a default at the root node).</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotSetSchemaContext">
        <source>Cannot set SchemaContext on ObjectWriter.</source>
        <target state="new">Cannot set SchemaContext on ObjectWriter.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotSetSchemaContextNull">
        <source>Cannot set SchemaContext to null.</source>
        <target state="new">Cannot set SchemaContext to null.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotWriteClosedWriter">
        <source>Cannot write on a closed XamlWriter.</source>
        <target state="new">Cannot write on a closed XamlWriter.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotWriteXmlSpacePreserveOnMember">
        <source>The value '{1}' contains significant white space(s) but "xml:space = preserve" cannot be written down on the member '{0}'.</source>
        <target state="new">The value '{1}' contains significant white space(s) but "xml:space = preserve" cannot be written down on the member '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CantAssignRootInstance">
        <source>Cannot assign root instance of type '{0}' to type '{1}'.</source>
        <target state="new">Cannot assign root instance of type '{0}' to type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CantCreateUnknownType">
        <source>Cannot create unknown type '{0}'.</source>
        <target state="new">Cannot create unknown type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CantGetWriteonlyProperty">
        <source>Cannot get write-only property '{0}'.</source>
        <target state="new">Cannot get write-only property '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CantSetReadonlyProperty">
        <source>Cannot set read-only property '{0}'.</source>
        <target state="new">Cannot set read-only property '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CantSetUnknownProperty">
        <source>Cannot set unknown member '{0}'.</source>
        <target state="new">Cannot set unknown member '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CloseInsideTemplate">
        <source>Close called while inside a deferred load section.</source>
        <target state="new">Close called while inside a deferred load section.</target>
        <note />
      </trans-unit>
      <trans-unit id="CloseXamlWriterBeforeReading">
        <source>Must close XamlWriter before reading from XamlNodeList.</source>
        <target state="new">Must close XamlWriter before reading from XamlNodeList.</target>
        <note />
      </trans-unit>
      <trans-unit id="CollectionCannotContainNulls">
        <source>Collection '{0}' cannot contain null values.</source>
        <target state="new">Collection '{0}' cannot contain null values.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConstructImplicitType">
        <source>Failed attempting to create an Implicit Type with a constructor.</source>
        <target state="new">Failed attempting to create an Implicit Type with a constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConstructorInvocation">
        <source>The invocation of the constructor on type '{0}' that matches the specified binding constraints threw an exception.</source>
        <target state="new">The invocation of the constructor on type '{0}' that matches the specified binding constraints threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConstructorNotFoundForGivenPositionalParameters">
        <source>Cannot write the given positional parameters because a matching constructor was not found.</source>
        <target state="new">Cannot write the given positional parameters because a matching constructor was not found.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertFromException">
        <source>'{0}' ValueSerializer cannot convert from '{1}'.</source>
        <target state="new">'{0}' ValueSerializer cannot convert from '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToException">
        <source>'{0}' ValueSerializer cannot convert '{1}' to '{2}'.</source>
        <target state="new">'{0}' ValueSerializer cannot convert '{1}' to '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConverterMustDeriveFromBase">
        <source>Converter type '{0}' doesn't derive from expected base type '{1}'.</source>
        <target state="new">Converter type '{0}' doesn't derive from expected base type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="DefaultAttachablePropertyStoreCannotAddInstance">
        <source>Failed to add attached properties to item in ConditionalWeakTable.</source>
        <target state="new">Failed to add attached properties to item in ConditionalWeakTable.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeferredLoad">
        <source>Deferred load threw an exception.</source>
        <target state="new">Deferred load threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeferredPropertyNotCollected">
        <source>Deferred member was not collected in '{0}'.</source>
        <target state="new">Deferred member was not collected in '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeferredSave">
        <source>Save of deferred-load content threw an exception.</source>
        <target state="new">Save of deferred-load content threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeferringLoaderInstanceNull">
        <source>Cannot get a XamlDeferringLoader from XamlValueConverter '{0}' because its ConverterInstance property is null.</source>
        <target state="new">Cannot get a XamlDeferringLoader from XamlValueConverter '{0}' because its ConverterInstance property is null.</target>
        <note />
      </trans-unit>
      <trans-unit id="DependsOnMissing">
        <source>'{0}'.'{1}' Depends on '{0}'.{1}', which was not set.</source>
        <target state="new">'{0}'.'{1}' Depends on '{0}'.{1}', which was not set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DictionaryFirstChanceException">
        <source>Dictionary of type '{0}' cannot add key '{1}'. A TypeConverter will convert the key to type '{2}'. To avoid seeing this error, override System.Collections.IDictionary.Add and perform the conversion there.</source>
        <target state="new">Dictionary of type '{0}' cannot add key '{1}'. A TypeConverter will convert the key to type '{2}'. To avoid seeing this error, override System.Collections.IDictionary.Add and perform the conversion there.</target>
        <note />
      </trans-unit>
      <trans-unit id="DirectiveGetter">
        <source>Directive getter is not implemented.</source>
        <target state="new">Directive getter is not implemented.</target>
        <note />
      </trans-unit>
      <trans-unit id="DirectiveMustBeString">
        <source>Directive '{0}' must be a value of type string. Remove this directive or change it to a string value.</source>
        <target state="new">Directive '{0}' must be a value of type string. Remove this directive or change it to a string value.</target>
        <note />
      </trans-unit>
      <trans-unit id="DirectiveNotAtRoot">
        <source>Directive '{0}' is only allowed on the root object. Remove this directive or move it to the root of the document.</source>
        <target state="new">Directive '{0}' is only allowed on the root object. Remove this directive or move it to the root of the document.</target>
        <note />
      </trans-unit>
      <trans-unit id="DirectiveNotFound">
        <source>Directive '{0}' was not found in TargetNamespace '{1}'.</source>
        <target state="new">Directive '{0}' was not found in TargetNamespace '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateMemberSet">
        <source>'{0}' property has already been set on '{1}'.</source>
        <target state="new">'{0}' property has already been set on '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateXmlnsCompat">
        <source>There is more than one XmlnsCompatibleWithAttribute in assembly '{0}' for OldNamespace '{1}'. Remove the extra attribute(s).</source>
        <target state="new">There is more than one XmlnsCompatibleWithAttribute in assembly '{0}' for OldNamespace '{1}'. Remove the extra attribute(s).</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateXmlnsCompatAcrossAssemblies">
        <source>There are conflicting XmlnsCompatibleWithAttributes in assemblies '{0}' and '{1}' for OldNamespace '{2}'. Change the attributes to have the same NewNamespace, or pass a non-conflicting set of Reference Assemblies in the XamlSchemaContext constructor.</source>
        <target state="new">There are conflicting XmlnsCompatibleWithAttributes in assemblies '{0}' and '{1}' for OldNamespace '{2}'. Change the attributes to have the same NewNamespace, or pass a non-conflicting set of Reference Assemblies in the XamlSchemaContext constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ElementBodyRuleException">
        <source>ElementBody ::= ATTRIBUTE* ( PropertyElement | Content )* . ENDTAG.</source>
        <target state="new">ElementBody ::= ATTRIBUTE* ( PropertyElement | Content )* . ENDTAG.</target>
        <note />
      </trans-unit>
      <trans-unit id="ElementRuleException">
        <source>Element ::= . EmptyElement | ( StartElement ElementBody ).</source>
        <target state="new">Element ::= . EmptyElement | ( StartElement ElementBody ).</target>
        <note />
      </trans-unit>
      <trans-unit id="EmptyElementRuleException">
        <source>EmptyElement ::= . EMPTYELEMENT DIRECTIVE* ATTRIBUTE*.</source>
        <target state="new">EmptyElement ::= . EMPTYELEMENT DIRECTIVE* ATTRIBUTE*.</target>
        <note />
      </trans-unit>
      <trans-unit id="EmptyPropertyElementRuleException">
        <source>EmptyPropertyElement ::= EMPTYPROPERTYELEMENT.</source>
        <target state="new">EmptyPropertyElement ::= EMPTYPROPERTYELEMENT.</target>
        <note />
      </trans-unit>
      <trans-unit id="EventCannotBeAssigned">
        <source>'{0}' event cannot be assigned a value that is not assignable to '{1}'.</source>
        <target state="new">'{0}' event cannot be assigned a value that is not assignable to '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExpandPositionalParametersWithReadOnlyProperties">
        <source>Cannot write positional parameters in the current state.  The writer cannot write the positional parameters in attribute form because the writer has started to write elements, nor can the writer expand the positional parameters since not all properties are writable.  Try moving the positional parameter member earlier in the node stream, to a place where XamlXmlWriter can still write attributes.</source>
        <target state="new">Cannot write positional parameters in the current state.  The writer cannot write the positional parameters in attribute form because the writer has started to write elements, nor can the writer expand the positional parameters since not all properties are writable.  Try moving the positional parameter member earlier in the node stream, to a place where XamlXmlWriter can still write attributes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExpandPositionalParametersWithoutUnderlyingType">
        <source>Cannot write positional parameters in the current state.  The writer cannot write the positional parameters in attribute form because the writer has started to write elements, nor can the writer expand the positional parameters since UnderlyingType on type '{0}' is null.  Try moving the positional parameter member earlier in the node stream, to place where XamlXmlWriter can still write attributes.</source>
        <target state="new">Cannot write positional parameters in the current state.  The writer cannot write the positional parameters in attribute form because the writer has started to write elements, nor can the writer expand the positional parameters since UnderlyingType on type '{0}' is null.  Try moving the positional parameter member earlier in the node stream, to place where XamlXmlWriter can still write attributes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExpandPositionalParametersinTypeWithNoDefaultConstructor">
        <source>Cannot write positional parameters in the current state.  The writer cannot write the positional parameters in attribute form because the writer has started to write elements, nor can the writer expand the positional parameters due to the lack of a default constructor on the markup extension that contains the positional parameters.  Try moving the positional parameter member earlier in the node stream, to a place where XamlXmlWriter can still write attributes.</source>
        <target state="new">Cannot write positional parameters in the current state.  The writer cannot write the positional parameters in attribute form because the writer has started to write elements, nor can the writer expand the positional parameters due to the lack of a default constructor on the markup extension that contains the positional parameters.  Try moving the positional parameter member earlier in the node stream, to a place where XamlXmlWriter can still write attributes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExpectedLoadPermission">
        <source>Expected permission of type XamlLoadPermission.</source>
        <target state="new">Expected permission of type XamlLoadPermission.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExpectedObjectMarkupInfo">
        <source>Expected value of type ObjectMarkupInfo.</source>
        <target state="new">Expected value of type ObjectMarkupInfo.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExpectedQualifiedAssemblyName">
        <source>Assembly name '{0}' is not fully qualified. The Name, Version, Culture, and PublicKeyToken must all be provided.</source>
        <target state="new">Assembly name '{0}' is not fully qualified. The Name, Version, Culture, and PublicKeyToken must all be provided.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExpectedQualifiedTypeName">
        <source>Type name '{0}' is not assembly-qualified. You can obtain this value from System.Type.AssemblyQualifiedName.</source>
        <target state="new">Type name '{0}' is not assembly-qualified. You can obtain this value from System.Type.AssemblyQualifiedName.</target>
        <note />
      </trans-unit>
      <trans-unit id="FactoryReturnedNull">
        <source>The factory method '{0}' that matches the specified binding constraints returned null.</source>
        <target state="new">The factory method '{0}' that matches the specified binding constraints returned null.</target>
        <note />
      </trans-unit>
      <trans-unit id="FileNotFoundExceptionMessage">
        <source>Could not load file or assembly '{0}' or one of its dependencies. The system cannot find the specified file.</source>
        <target state="new">Could not load file or assembly '{0}' or one of its dependencies. The system cannot find the specified file.</target>
        <note />
      </trans-unit>
      <trans-unit id="ForwardRefDirectives">
        <source>Attempt to reference named object(s) '{0}' which have not yet been defined. Forward references, or references to objects that contain forward references, are not supported on directives other than Key.</source>
        <target state="new">Attempt to reference named object(s) '{0}' which have not yet been defined. Forward references, or references to objects that contain forward references, are not supported on directives other than Key.</target>
        <note />
      </trans-unit>
      <trans-unit id="FrugalList_CannotPromoteBeyondArray">
        <source>Cannot promote from Array.</source>
        <target state="new">Cannot promote from Array.</target>
        <note />
      </trans-unit>
      <trans-unit id="FrugalList_TargetMapCannotHoldAllData">
        <source>Cannot promote from '{0}' to '{1}' because the target map is too small.</source>
        <target state="new">Cannot promote from '{0}' to '{1}' because the target map is too small.</target>
        <note />
      </trans-unit>
      <trans-unit id="GetConverterInstance">
        <source>Getting instance of '{0}' threw an exception.</source>
        <target state="new">Getting instance of '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="GetItemsException">
        <source>Retrieving items in collection or dictionary of type '{0}' threw an exception.</source>
        <target state="new">Retrieving items in collection or dictionary of type '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="GetItemsReturnedNull">
        <source>XamlTypeInvoker.GetItems returned null for type '{0}'. This generally indicates an incorrectly implemented collection type.</source>
        <target state="new">XamlTypeInvoker.GetItems returned null for type '{0}'. This generally indicates an incorrectly implemented collection type.</target>
        <note />
      </trans-unit>
      <trans-unit id="GetObjectNull">
        <source>Collection property '{0}'.'{1}' is null.</source>
        <target state="new">Collection property '{0}'.'{1}' is null.</target>
        <note />
      </trans-unit>
      <trans-unit id="GetTargetTypeOnNonAttachableMember">
        <source>Cannot get TargetType on a non-attachable Member.</source>
        <target state="new">Cannot get TargetType on a non-attachable Member.</target>
        <note />
      </trans-unit>
      <trans-unit id="GetValue">
        <source>Get property '{0}' threw an exception.</source>
        <target state="new">Get property '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="GetterOrSetterRequired">
        <source>Either getter or setter must be non-null.</source>
        <target state="new">Either getter or setter must be non-null.</target>
        <note />
      </trans-unit>
      <trans-unit id="IncorrectGetterParamNum">
        <source>Attached property getter methods must have one parameter and a non-void return type.</source>
        <target state="new">Attached property getter methods must have one parameter and a non-void return type.</target>
        <note />
      </trans-unit>
      <trans-unit id="IncorrectSetterParamNum">
        <source>Attached property setter and attached event adder methods must have two parameters.</source>
        <target state="new">Attached property setter and attached event adder methods must have two parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="InitializationGuard">
        <source>Initialization of '{0}' threw an exception.</source>
        <target state="new">Initialization of '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="InitializationSyntaxWithoutTypeConverter">
        <source>Type '{0}' cannot be initialized from text (XamlLanguage.Initialization).  Add a TypeConverter to this type or change the XAML to use a constructor or factory method.</source>
        <target state="new">Type '{0}' cannot be initialized from text (XamlLanguage.Initialization).  Add a TypeConverter to this type or change the XAML to use a constructor or factory method.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidCharInTypeName">
        <source>Character '{0}' was unexpected in string '{1}'.  Invalid XAML type name.</source>
        <target state="new">Character '{0}' was unexpected in string '{1}'.  Invalid XAML type name.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidClosingBracketCharacers">
        <source>Encountered a closing BracketCharacter '{0}' without a corresponding opening BracketCharacter.</source>
        <target state="new">Encountered a closing BracketCharacter '{0}' without a corresponding opening BracketCharacter.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidEvent">
        <source>Event argument is invalid.</source>
        <target state="new">Event argument is invalid.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidExpression">
        <source>Invalid expression: '{0}'</source>
        <target state="new">Invalid expression: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidTypeArgument">
        <source>Type argument '{0}' is not a valid type.</source>
        <target state="new">Type argument '{0}' is not a valid type.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidTypeListString">
        <source>The string '{0}' is not a valid XAML type name list. Type name lists are comma-delimited lists of types; such as 'x:String, x:Int32'.</source>
        <target state="new">The string '{0}' is not a valid XAML type name list. Type name lists are comma-delimited lists of types; such as 'x:String, x:Int32'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidTypeString">
        <source>The string '{0}' is not a valid XAML type name. Type names contain an optional prefix, a name, and optional type arguments; such as 'String', 'x:Int32', 'g:Dictionary(x:String,x:Int32)'.</source>
        <target state="new">The string '{0}' is not a valid XAML type name. Type names contain an optional prefix, a name, and optional type arguments; such as 'String', 'x:Int32', 'g:Dictionary(x:String,x:Int32)'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidXamlMemberName">
        <source>'{0}' is not a valid XAML member name.</source>
        <target state="new">'{0}' is not a valid XAML member name.</target>
        <note />
      </trans-unit>
      <trans-unit id="LateConstructionDirective">
        <source>Construction directive '{0}' must be an attribute or the first property element.</source>
        <target state="new">Construction directive '{0}' must be an attribute or the first property element.</target>
        <note />
      </trans-unit>
      <trans-unit id="LineNumberAndPosition">
        <source>'{0}' Line number '{1}' and line position '{2}'.</source>
        <target state="new">'{0}' Line number '{1}' and line position '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="LineNumberOnly">
        <source>'{0}' Line number '{1}'.</source>
        <target state="new">'{0}' Line number '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListNotIList">
        <source>List collection is not an IList.</source>
        <target state="new">List collection is not an IList.</target>
        <note />
      </trans-unit>
      <trans-unit id="MalformedBracketCharacters">
        <source>BracketCharacter '{0}' does not have a corresponding opening/closing BracketCharacter.</source>
        <target state="new">BracketCharacter '{0}' does not have a corresponding opening/closing BracketCharacter.</target>
        <note />
      </trans-unit>
      <trans-unit id="MalformedPropertyName">
        <source>Cannot parse the malformed property name '{0}'.</source>
        <target state="new">Cannot parse the malformed property name '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkupExtensionArrayBadType">
        <source>Items in the array must be type '{0}'. One or more items cannot be cast to this type.</source>
        <target state="new">Items in the array must be type '{0}'. One or more items cannot be cast to this type.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkupExtensionArrayType">
        <source>Must set Type before calling ProvideValue on ArrayExtension.</source>
        <target state="new">Must set Type before calling ProvideValue on ArrayExtension.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkupExtensionBadStatic">
        <source>'{0}' StaticExtension value cannot be resolved to an enumeration, static field, or static property.</source>
        <target state="new">'{0}' StaticExtension value cannot be resolved to an enumeration, static field, or static property.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkupExtensionNoContext">
        <source>Markup extension '{0}' requires '{1}' be implemented in the IServiceProvider for ProvideValue.</source>
        <target state="new">Markup extension '{0}' requires '{1}' be implemented in the IServiceProvider for ProvideValue.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkupExtensionStaticMember">
        <source>StaticExtension must have Member property set before ProvideValue can be called.</source>
        <target state="new">StaticExtension must have Member property set before ProvideValue can be called.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkupExtensionTypeName">
        <source>TypeExtension must have TypeName property set before ProvideValue can be called.</source>
        <target state="new">TypeExtension must have TypeName property set before ProvideValue can be called.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkupExtensionTypeNameBad">
        <source>'{0}' string is not valid for type.</source>
        <target state="new">'{0}' string is not valid for type.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkupExtensionWithDuplicateArity">
        <source>Cannot determine the positional parameters for type '{0}' because it has more than one constructor overload with '{1}' parameters. To make this markup extension usable in XAML, remove the duplicate constructor overload(s) or set XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity to true.</source>
        <target state="new">Cannot determine the positional parameters for type '{0}' because it has more than one constructor overload with '{1}' parameters. To make this markup extension usable in XAML, remove the duplicate constructor overload(s) or set XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity to true.</target>
        <note />
      </trans-unit>
      <trans-unit id="MemberHasInvalidXamlName">
        <source>The name of the member '{0}' contains characters that are invalid in XAML.</source>
        <target state="new">The name of the member '{0}' contains characters that are invalid in XAML.</target>
        <note />
      </trans-unit>
      <trans-unit id="MemberIsInternal">
        <source>Member '{0}' on type '{1}' is internal.</source>
        <target state="new">Member '{0}' on type '{1}' is internal.</target>
        <note />
      </trans-unit>
      <trans-unit id="MethodInvocation">
        <source>The invocation of a method '{0}' that matches the specified binding constraints threw an exception.</source>
        <target state="new">The invocation of a method '{0}' that matches the specified binding constraints threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingAssemblyName">
        <source>No local assembly provided to complete URI='{0}'.</source>
        <target state="new">No local assembly provided to complete URI='{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingCase">
        <source>Missing case '{0}' in DeferringWriter'{1}' method.</source>
        <target state="new">Missing case '{0}' in DeferringWriter'{1}' method.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingCaseXamlNodes">
        <source>Missing case in Default processing of XamlNodes.</source>
        <target state="new">Missing case in Default processing of XamlNodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingComma1">
        <source>Unexpected equals sign '=' following '{0}'. Check for a missing comma separator.</source>
        <target state="new">Unexpected equals sign '=' following '{0}'. Check for a missing comma separator.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingComma2">
        <source>Unexpected equals sign '=' following '{0}'='{1}'. Check for a missing comma separator.</source>
        <target state="new">Unexpected equals sign '=' following '{0}'='{1}'. Check for a missing comma separator.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingImplicitProperty">
        <source>Missing implicit property case.</source>
        <target state="new">Missing implicit property case.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingImplicitPropertyTypeCase">
        <source>Missing case for ImplicitPropertyType.</source>
        <target state="new">Missing case for ImplicitPropertyType.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingKey">
        <source>Missing key value on '{0}' object.</source>
        <target state="new">Missing key value on '{0}' object.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingLookPropertyBit">
        <source>Missing case handler in LookupPropertyBit.</source>
        <target state="new">Missing case handler in LookupPropertyBit.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingNameProvider">
        <source>Service provider is missing the IXamlNameProvider service.</source>
        <target state="new">Service provider is missing the IXamlNameProvider service.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingNameResolver">
        <source>Service provider is missing the INameResolver service.</source>
        <target state="new">Service provider is missing the INameResolver service.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingPropertyCaseClrType">
        <source>Missing case in ClrType 'Member' lookup.</source>
        <target state="new">Missing case in ClrType 'Member' lookup.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingTagInNamespace">
        <source>Missing '{0}' in URI '{1}'.</source>
        <target state="new">Missing '{0}' in URI '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingTypeConverter">
        <source>Creating from text without a TypeConverter is not allowed.</source>
        <target state="new">Creating from text without a TypeConverter is not allowed.</target>
        <note />
      </trans-unit>
      <trans-unit id="MustBeOfType">
        <source>'{0}' must be of type '{1}'.</source>
        <target state="new">'{0}' must be of type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="MustHaveName">
        <source>Reference must have a Name to resolve.</source>
        <target state="new">Reference must have a Name to resolve.</target>
        <note />
      </trans-unit>
      <trans-unit id="MustNotCallSetter">
        <source>This setter is not intended to be used directly from your code. Do not call this setter.</source>
        <target state="new">This setter is not intended to be used directly from your code. Do not call this setter.</target>
        <note />
      </trans-unit>
      <trans-unit id="NameNotFound">
        <source>Name resolution failure. '{0}' was not found.</source>
        <target state="new">Name resolution failure. '{0}' was not found.</target>
        <note />
      </trans-unit>
      <trans-unit id="NameScopeDuplicateNamesNotAllowed">
        <source>Cannot register duplicate name '{0}' in this scope.</source>
        <target state="new">Cannot register duplicate name '{0}' in this scope.</target>
        <note />
      </trans-unit>
      <trans-unit id="NameScopeException">
        <source>Could not register named object. {0}</source>
        <target state="new">Could not register named object. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="NameScopeInvalidIdentifierName">
        <source>'{0}' name is not valid for identifier.</source>
        <target state="new">'{0}' name is not valid for identifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="NameScopeNameNotEmptyString">
        <source>Name cannot be an empty string.</source>
        <target state="new">Name cannot be an empty string.</target>
        <note />
      </trans-unit>
      <trans-unit id="NameScopeNameNotFound">
        <source>Name '{0}' was not found.</source>
        <target state="new">Name '{0}' was not found.</target>
        <note />
      </trans-unit>
      <trans-unit id="NameScopeOnRootInstance">
        <source>Cannot attach NameScope to null root instance.</source>
        <target state="new">Cannot attach NameScope to null root instance.</target>
        <note />
      </trans-unit>
      <trans-unit id="NamespaceDeclarationCannotBeXml">
        <source>The prefix 'xml' is reserved.</source>
        <target state="new">The prefix 'xml' is reserved.</target>
        <note />
      </trans-unit>
      <trans-unit id="NamespaceDeclarationNamespaceCannotBeNull">
        <source>NamespaceDeclaration.Namespace cannot be null.  Provide a value for this property.</source>
        <target state="new">NamespaceDeclaration.Namespace cannot be null.  Provide a value for this property.</target>
        <note />
      </trans-unit>
      <trans-unit id="NamespaceDeclarationPrefixCannotBeNull">
        <source>NamespaceDeclaration.Prefix cannot be null.  Provide a value for this property.</source>
        <target state="new">NamespaceDeclaration.Prefix cannot be null.  Provide a value for this property.</target>
        <note />
      </trans-unit>
      <trans-unit id="NamespaceNotFound">
        <source>Namespace '{0}' was not found in scope.</source>
        <target state="new">Namespace '{0}' was not found in scope.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoAddMethodFound">
        <source>No Add methods found on type '{0}' for a value of type '{1}'.</source>
        <target state="new">No Add methods found on type '{0}' for a value of type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoAttributeUsage">
        <source>'{0}' is not allowed in attribute usage.</source>
        <target state="new">'{0}' is not allowed in attribute usage.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoConstructor">
        <source>No matching constructor found on type '{0}'. You can use the Arguments or FactoryMethod directives to construct this type.</source>
        <target state="new">No matching constructor found on type '{0}'. You can use the Arguments or FactoryMethod directives to construct this type.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoConstructorWithNArugments">
        <source>A Constructor for '{0}' with '{1}' arguments was not found.</source>
        <target state="new">A Constructor for '{0}' with '{1}' arguments was not found.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoDefaultConstructor">
        <source>No default constructor found for type '{0}'. You can use the Arguments or FactoryMethod directives to construct this type.</source>
        <target state="new">No default constructor found for type '{0}'. You can use the Arguments or FactoryMethod directives to construct this type.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoElementUsage">
        <source>'{0}' is not allowed in element usage.</source>
        <target state="new">'{0}' is not allowed in element usage.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoPropertyInCurrentFrame_EM">
        <source>XAML Node Stream: Missing StartMember on Type '{0}' before EndMember.</source>
        <target state="new">XAML Node Stream: Missing StartMember on Type '{0}' before EndMember.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoPropertyInCurrentFrame_EM_noType">
        <source>XAML Node Stream: EndMember must follow StartObject and StartMember.</source>
        <target state="new">XAML Node Stream: EndMember must follow StartObject and StartMember.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoPropertyInCurrentFrame_GO">
        <source>XAML Node Stream: GetObject requires a StartMember after StartObject '{0}'.</source>
        <target state="new">XAML Node Stream: GetObject requires a StartMember after StartObject '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoPropertyInCurrentFrame_GO_noType">
        <source>XAML Node Stream: GetObject must follow a StartObject and StartMember.</source>
        <target state="new">XAML Node Stream: GetObject must follow a StartObject and StartMember.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoPropertyInCurrentFrame_NS">
        <source>XAML Node Stream: '{0}'='{1}' Namespace Declaration requires a StartMember after StartObject '{2}'.</source>
        <target state="new">XAML Node Stream: '{0}'='{1}' Namespace Declaration requires a StartMember after StartObject '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoPropertyInCurrentFrame_SO">
        <source>XAML Node Stream: StartObject '{0}' requires a StartMember after StartObject '{1}'.</source>
        <target state="new">XAML Node Stream: StartObject '{0}' requires a StartMember after StartObject '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoPropertyInCurrentFrame_V">
        <source>XAML Node Stream: Value of '{0}' requires a StartMember after StartObject '{1}'.</source>
        <target state="new">XAML Node Stream: Value of '{0}' requires a StartMember after StartObject '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoPropertyInCurrentFrame_V_noType">
        <source>XAML Node Stream: Value of '{0}' must follow a StartObject and StartMember.</source>
        <target state="new">XAML Node Stream: Value of '{0}' must follow a StartObject and StartMember.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoSuchConstructor">
        <source>No constructor with '{0}' arguments for '{1}'.</source>
        <target state="new">No constructor with '{0}' arguments for '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoTypeInCurrentFrame_EO">
        <source>XAML Node Stream: Missing CurrentObject before EndObject.</source>
        <target state="new">XAML Node Stream: Missing CurrentObject before EndObject.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoTypeInCurrentFrame_SM">
        <source>XAML Node Stream: Missing StartObject before StartMember '{0}'.</source>
        <target state="new">XAML Node Stream: Missing StartObject before StartMember '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="NonMEWithPositionalParameters">
        <source>Type with positional parameters is not a markup extension.</source>
        <target state="new">Type with positional parameters is not a markup extension.</target>
        <note />
      </trans-unit>
      <trans-unit id="NonemptyPropertyElementRuleException">
        <source>NonemptyPropertyElement ::= . PROPERTYELEMENT Content? ENDTAG.</source>
        <target state="new">NonemptyPropertyElement ::= . PROPERTYELEMENT Content? ENDTAG.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotAmbientProperty">
        <source>'{0}'.'{1}' is not an ambient property.</source>
        <target state="new">'{0}'.'{1}' is not an ambient property.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotAmbientType">
        <source>'{0}' is not an ambient type.</source>
        <target state="new">'{0}' is not an ambient type.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotAssignableFrom">
        <source>The type '{0}' is not assignable from the type '{1}'.</source>
        <target state="new">The type '{0}' is not assignable from the type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotDeclaringTypeAttributeProperty">
        <source>['{0}'('{1}')] on '{2}' is not a property declared on this type.</source>
        <target state="new">['{0}'('{1}')] on '{2}' is not a property declared on this type.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotSupportedOnDirective">
        <source>This operation is not supported on directive members.</source>
        <target state="new">This operation is not supported on directive members.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotSupportedOnUnknownMember">
        <source>This operation is not supported on unknown members.</source>
        <target state="new">This operation is not supported on unknown members.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotSupportedOnUnknownType">
        <source>This operation is not supported on unknown types.</source>
        <target state="new">This operation is not supported on unknown types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectNotTcOrMe">
        <source>Argument should be a Type Converter, Markup Extension or Null.</source>
        <target state="new">Argument should be a Type Converter, Markup Extension or Null.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderAttachedPropertyNotFound">
        <source>Unable to find an attachable property named '{0}' on type '{1}'.</source>
        <target state="new">Unable to find an attachable property named '{0}' on type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderDictionaryMethod1NotFound">
        <source>Unable to locate MemberMarkupInfo.DictionaryEntriesFromGeneric method.</source>
        <target state="new">Unable to locate MemberMarkupInfo.DictionaryEntriesFromGeneric method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderInstanceDescriptorIncompatibleArgumentTypes">
        <source>InstanceDescriptor provided an argument of type '{0}' where a parameter of type '{1}' was expected.</source>
        <target state="new">InstanceDescriptor provided an argument of type '{0}' where a parameter of type '{1}' was expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderInstanceDescriptorIncompatibleArguments">
        <source>InstanceDescriptor did not provide the correct number of arguments.</source>
        <target state="new">InstanceDescriptor did not provide the correct number of arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderInstanceDescriptorInvalidMethod">
        <source>InstanceDescriptor did not provide a valid constructor or method.</source>
        <target state="new">InstanceDescriptor did not provide a valid constructor or method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderMultidimensionalArrayNotSupported">
        <source>Multidimensional arrays not supported.</source>
        <target state="new">Multidimensional arrays not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderNoDefaultConstructor">
        <source>Unable to serialize type '{0}'.  Verify that the type is public and either has a default constructor or an instance descriptor.</source>
        <target state="new">Unable to serialize type '{0}'.  Verify that the type is public and either has a default constructor or an instance descriptor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderNoMatchingConstructor">
        <source>Unable to find a suitable constructor for the specified constructor arguments on type '{0}'.</source>
        <target state="new">Unable to find a suitable constructor for the specified constructor arguments on type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderTypeCannotRoundtrip">
        <source>Unable to read objects of the type ‘{0}’ because there are no accessible constructors. To allow this type to be used in XAML, add a default constructor, use ConstructorArgumentAttribute, or provide an InstanceDescriptor.</source>
        <target state="new">Unable to read objects of the type ‘{0}’ because there are no accessible constructors. To allow this type to be used in XAML, add a default constructor, use ConstructorArgumentAttribute, or provide an InstanceDescriptor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderTypeIsNested">
        <source>Unable to read objects of the type '{0}'.  Nested types are not supported.</source>
        <target state="new">Unable to read objects of the type '{0}'.  Nested types are not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderTypeNotAllowed">
        <source>'{0}' blocked the use of type '{1}' in XAML. If you want to serialize this type, change '{0}'.GetXamlType to return a non-null value for this type, or pass a different value in the schemaContext parameter of the XamlObjectReader constructor.</source>
        <target state="new">'{0}' blocked the use of type '{1}' in XAML. If you want to serialize this type, change '{0}'.GetXamlType to return a non-null value for this type, or pass a different value in the schemaContext parameter of the XamlObjectReader constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderXamlNamePropertyMustBeString">
        <source>The name property '{0}' on type '{1}' must be of type System.String.</source>
        <target state="new">The name property '{0}' on type '{1}' must be of type System.String.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderXamlNameScopeResultsInClonedObject">
        <source>The object graph contains multiple references to an instance of type '{0}' and the serializer cannot find a commonly visible location to write the instance. You should examine your use of name scopes.</source>
        <target state="new">The object graph contains multiple references to an instance of type '{0}' and the serializer cannot find a commonly visible location to write the instance. You should examine your use of name scopes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReaderXamlNamedElementAlreadyRegistered">
        <source>An element with the name '{0}' has already been registered in this scope.</source>
        <target state="new">An element with the name '{0}' has already been registered in this scope.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectReader_TypeNotVisible">
        <source>Type '{0}' not visible. If the type is local, please set the LocalAssembly field in XamlReaderSettings.</source>
        <target state="new">Type '{0}' not visible. If the type is local, please set the LocalAssembly field in XamlReaderSettings.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectWriterTypeNotAllowed">
        <source>'{0}' blocked the use of type '{1}' in XAML. If you want to load this type, change '{0}'.GetXamlType to return a non-null value for this type, or pass a different value in the schemaContext parameter of the XamlObjectWriter constructor.</source>
        <target state="new">'{0}' blocked the use of type '{1}' in XAML. If you want to load this type, change '{0}'.GetXamlType to return a non-null value for this type, or pass a different value in the schemaContext parameter of the XamlObjectWriter constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="OnlySupportedOnCollections">
        <source>This operation is only supported on collection types.</source>
        <target state="new">This operation is only supported on collection types.</target>
        <note />
      </trans-unit>
      <trans-unit id="OnlySupportedOnCollectionsAndDictionaries">
        <source>This operation is only supported on collection and dictionary types.</source>
        <target state="new">This operation is only supported on collection and dictionary types.</target>
        <note />
      </trans-unit>
      <trans-unit id="OnlySupportedOnDictionaries">
        <source>This operation is only supported on dictionary types.</source>
        <target state="new">This operation is only supported on dictionary types.</target>
        <note />
      </trans-unit>
      <trans-unit id="OpenPropertyInCurrentFrame_EO">
        <source>XAML Node Stream: Missing EndMember for '{0}.{1}' before EndObject.</source>
        <target state="new">XAML Node Stream: Missing EndMember for '{0}.{1}' before EndObject.</target>
        <note />
      </trans-unit>
      <trans-unit id="OpenPropertyInCurrentFrame_SM">
        <source>XAML Node Stream: Missing EndMember for '{0}.{1}' before StartMember '{2}'.</source>
        <target state="new">XAML Node Stream: Missing EndMember for '{0}.{1}' before StartMember '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ParentlessPropertyElement">
        <source>The property element '{0}' is not contained by an object element.</source>
        <target state="new">The property element '{0}' is not contained by an object element.</target>
        <note />
      </trans-unit>
      <trans-unit id="ParserAssemblyLoadVersionMismatch">
        <source>Cannot load assembly '{0}' because a different version of that same assembly is loaded '{1}'.</source>
        <target state="new">Cannot load assembly '{0}' because a different version of that same assembly is loaded '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ParserAttributeArgsHigh">
        <source>Too many attributes are specified for '{0}'.</source>
        <target state="new">Too many attributes are specified for '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ParserAttributeArgsLow">
        <source>'{0}' requires more attributes.</source>
        <target state="new">'{0}' requires more attributes.</target>
        <note />
      </trans-unit>
      <trans-unit id="PositionalParamsWrongLength">
        <source>GetPositionalParameters returned the wrong length vector.</source>
        <target state="new">GetPositionalParameters returned the wrong length vector.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrefixNotFound">
        <source>Prefix '{0}' does not map to a namespace.</source>
        <target state="new">Prefix '{0}' does not map to a namespace.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrefixNotInFrames">
        <source>The prefix '{0}' could not be found.</source>
        <target state="new">The prefix '{0}' could not be found.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyDoesNotTakeText">
        <source>'{0}' property on '{1}' does not allow you to specify text.</source>
        <target state="new">'{0}' property on '{1}' does not allow you to specify text.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyElementRuleException">
        <source>PropertyElement ::= EmptyPropertyElement | NonemptyPropertyElement</source>
        <target state="new">PropertyElement ::= EmptyPropertyElement | NonemptyPropertyElement</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyNotImplemented">
        <source>'{0}' is not implemented.</source>
        <target state="new">'{0}' is not implemented.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProvideValue">
        <source>Provide value on '{0}' threw an exception.</source>
        <target state="new">Provide value on '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProvideValueCycle">
        <source>Cannot call MarkupExtension.ProvideValue because of a cyclical dependency. Properties inside a MarkupExtension cannot reference objects that reference the result of the MarkupExtension. The affected MarkupExtensions are:</source>
        <target state="new">Cannot call MarkupExtension.ProvideValue because of a cyclical dependency. Properties inside a MarkupExtension cannot reference objects that reference the result of the MarkupExtension. The affected MarkupExtensions are:</target>
        <note />
      </trans-unit>
      <trans-unit id="QualifiedNameHasWrongFormat">
        <source>'{0}' type name does not have the expected format 'className, assembly'.</source>
        <target state="new">'{0}' type name does not have the expected format 'className, assembly'.</target>
        <note />
      </trans-unit>
      <trans-unit id="QuoteCharactersOutOfPlace">
        <source>Quote characters ' or " are only allowed at the start of values.</source>
        <target state="new">Quote characters ' or " are only allowed at the start of values.</target>
        <note />
      </trans-unit>
      <trans-unit id="ReferenceIsNull">
        <source>Value cannot be null. Object reference: '{0}'.</source>
        <target state="new">Value cannot be null. Object reference: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="SavedContextSchemaContextMismatch">
        <source>schemaContext parameter cannot be different from savedContext.SchemaContext</source>
        <target state="new">schemaContext parameter cannot be different from savedContext.SchemaContext</target>
        <note />
      </trans-unit>
      <trans-unit id="SavedContextSchemaContextNull">
        <source>savedContext.SchemaContext cannot be null</source>
        <target state="new">savedContext.SchemaContext cannot be null</target>
        <note />
      </trans-unit>
      <trans-unit id="SchemaContextNotInitialized">
        <source>SchemaContext on writer must be initialized before accessing the reader.</source>
        <target state="new">SchemaContext on writer must be initialized before accessing the reader.</target>
        <note />
      </trans-unit>
      <trans-unit id="SchemaContextNull">
        <source>SchemaContext cannot be null.</source>
        <target state="new">SchemaContext cannot be null.</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityXmlMissingAttribute">
        <source>Invalid security XML. Missing expected attribute '{0}'.</source>
        <target state="new">Invalid security XML. Missing expected attribute '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityXmlUnexpectedTag">
        <source>Invalid security XML. Unexpected tag '{0}', expected '{1}'.</source>
        <target state="new">Invalid security XML. Unexpected tag '{0}', expected '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityXmlUnexpectedValue">
        <source>Invalid security XML. Unexpected value '{0}' in attribute '{1}', expected '{2}'.</source>
        <target state="new">Invalid security XML. Unexpected value '{0}' in attribute '{1}', expected '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ServiceTypeAlreadyAdded">
        <source>This serviceType is already registered to another service.</source>
        <target state="new">This serviceType is already registered to another service.</target>
        <note />
      </trans-unit>
      <trans-unit id="SetConnectionId">
        <source>Set connectionId threw an exception.</source>
        <target state="new">Set connectionId threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="SetOnlyProperty">
        <source>'{0}'.'{1}' is a property without a getter and is not a valid XAML property.</source>
        <target state="new">'{0}'.'{1}' is a property without a getter and is not a valid XAML property.</target>
        <note />
      </trans-unit>
      <trans-unit id="SetTargetTypeOnNonAttachableMember">
        <source>Cannot set TargetType on a non-attachable Member.</source>
        <target state="new">Cannot set TargetType on a non-attachable Member.</target>
        <note />
      </trans-unit>
      <trans-unit id="SetUriBase">
        <source>Setting xml:base on '{0}' threw an exception.</source>
        <target state="new">Setting xml:base on '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="SetValue">
        <source>Set property '{0}' threw an exception.</source>
        <target state="new">Set property '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="SetXmlInstance">
        <source>Setting xml instance on '{0}' threw an exception.</source>
        <target state="new">Setting xml instance on '{0}' threw an exception.</target>
        <note />
      </trans-unit>
      <trans-unit id="SettingPropertiesIsNotAllowed">
        <source>Setting properties is not allowed on a type converted instance. Property = '{0}'</source>
        <target state="new">Setting properties is not allowed on a type converted instance. Property = '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldOverrideMethod">
        <source>Method '{0}' is not supported by default. It can be implemented in derived classes.</source>
        <target state="new">Method '{0}' is not supported by default. It can be implemented in derived classes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldSerializeFailed">
        <source>ShouldSerialize check failed for member '{0}'.</source>
        <target state="new">ShouldSerialize check failed for member '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="SimpleFixupsMustHaveOneName">
        <source>Directly Assignable Fixups must only have one name.</source>
        <target state="new">Directly Assignable Fixups must only have one name.</target>
        <note />
      </trans-unit>
      <trans-unit id="StartElementRuleException">
        <source>StartElement ::= . ELEMENT DIRECTIVE*.</source>
        <target state="new">StartElement ::= . ELEMENT DIRECTIVE*.</target>
        <note />
      </trans-unit>
      <trans-unit id="StringIsNullOrEmpty">
        <source>The string is null or empty.</source>
        <target state="new">The string is null or empty.</target>
        <note />
      </trans-unit>
      <trans-unit id="TemplateNotCollected">
        <source>Deferred load section was not collected in '{0}'.</source>
        <target state="new">Deferred load section was not collected in '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ThreadAlreadyStarted">
        <source>Thread is already started.</source>
        <target state="new">Thread is already started.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToStringNull">
        <source>(null)</source>
        <target state="new">(null)</target>
        <note />
      </trans-unit>
      <trans-unit id="TooManyAttributes">
        <source>Error with member '{0}'.'{1}'.  It has more than one '{2}'.</source>
        <target state="new">Error with member '{0}'.'{1}'.  It has more than one '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TooManyAttributesOnType">
        <source>Error with type '{0}'.  It has more than one '{1}'.</source>
        <target state="new">Error with type '{0}'.  It has more than one '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TooManyTypeConverterAttributes">
        <source>Only one TypeConverter attribute is allowed on a type.</source>
        <target state="new">Only one TypeConverter attribute is allowed on a type.</target>
        <note />
      </trans-unit>
      <trans-unit id="TransitiveForwardRefDirectives">
        <source>Object '{0}' assigned to directive '{1}' has properties which are references to named object(s) '{2}' which have not yet been defined. Forward references, or references to objects that contain forward references, are not supported inside object construction directives.</source>
        <target state="new">Object '{0}' assigned to directive '{1}' has properties which are references to named object(s) '{2}' which have not yet been defined. Forward references, or references to objects that contain forward references, are not supported inside object construction directives.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeConverterFailed">
        <source>Failed to create a '{0}' from the text '{1}'.</source>
        <target state="new">Failed to create a '{0}' from the text '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeConverterFailed2">
        <source>Failed to convert '{0}' to type '{1}'.</source>
        <target state="new">Failed to convert '{0}' to type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeHasInvalidXamlName">
        <source>The name of the type '{0}' contains characters that are invalid in XAML.</source>
        <target state="new">The name of the type '{0}' contains characters that are invalid in XAML.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeHasNoContentProperty">
        <source>Type '{0}' does not have a content property. Specify the name of the property to set, or add a ContentPropertyAttribute or TypeConverterAttribute on the type.</source>
        <target state="new">Type '{0}' does not have a content property. Specify the name of the property to set, or add a ContentPropertyAttribute or TypeConverterAttribute on the type.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNameCannotHavePeriod">
        <source>Type name '{0}' cannot have a dot '.'.</source>
        <target state="new">Type name '{0}' cannot have a dot '.'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotFound">
        <source>Type reference cannot find type named '{0}'.</source>
        <target state="new">Type reference cannot find type named '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotPublic">
        <source>Type '{0}' is not public.</source>
        <target state="new">Type '{0}' is not public.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnclosedQuote">
        <source>Unclosed quoted value.</source>
        <target state="new">Unclosed quoted value.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedClose">
        <source>Unexpected close of XAML Node Stream.</source>
        <target state="new">Unexpected close of XAML Node Stream.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedConstructorArg">
        <source>Invalid metadata for attribute '{0}' on '{1}'. Expected '{2}' argument(s) of type '{3}'.</source>
        <target state="new">Invalid metadata for attribute '{0}' on '{1}'. Expected '{2}' argument(s) of type '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedNodeType">
        <source>Unexpected '{0}' in parse rule '{1}'.</source>
        <target state="new">Unexpected '{0}' in parse rule '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedToken">
        <source>Unexpected token '{0}' in rule: '{1}', in '{2}'.</source>
        <target state="new">Unexpected token '{0}' in rule: '{1}', in '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedTokenAfterME">
        <source>Unexpected token after end of markup extension.</source>
        <target state="new">Unexpected token after end of markup extension.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnhandledBoolTypeBit">
        <source>Unhandled BoolTypeBit.</source>
        <target state="new">Unhandled BoolTypeBit.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnknownAttributeProperty">
        <source>['{0}'('{1}')] on '{2}' is not a known property.</source>
        <target state="new">['{0}'('{1}')] on '{2}' is not a known property.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnknownMember">
        <source>Unknown member '{0}' on '{1}'.</source>
        <target state="new">Unknown member '{0}' on '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnknownMemberOnUnknownType">
        <source>Unknown member '{0}' on unknown type '{1}'.</source>
        <target state="new">Unknown member '{0}' on unknown type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnknownMemberSimple">
        <source>Unknown member '{0}'.</source>
        <target state="new">Unknown member '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnknownType">
        <source>Unknown type '{0}'.</source>
        <target state="new">Unknown type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnresolvedForwardReferences">
        <source>Unresolved reference '{0}'.</source>
        <target state="new">Unresolved reference '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnresolvedNamespace">
        <source>XAML namespace '{0}' is not resolved.</source>
        <target state="new">XAML namespace '{0}' is not resolved.</target>
        <note />
      </trans-unit>
      <trans-unit id="UriNotFound">
        <source>Uri '{0}' was not found.</source>
        <target state="new">Uri '{0}' was not found.</target>
        <note />
      </trans-unit>
      <trans-unit id="UsableDuringInitializationOnME">
        <source>Error with type '{0}'. MarkupExtensions cannot use the 'UsableDuringInitialization' attribute.</source>
        <target state="new">Error with type '{0}'. MarkupExtensions cannot use the 'UsableDuringInitialization' attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueInArrayIsNull">
        <source>A value in the '{0}' array is null.</source>
        <target state="new">A value in the '{0}' array is null.</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueMustBeFollowedByEndMember">
        <source>XAML Node Stream: Value nodes must be followed by EndMember.</source>
        <target state="new">XAML Node Stream: Value nodes must be followed by EndMember.</target>
        <note />
      </trans-unit>
      <trans-unit id="WhiteSpaceInCollection">
        <source>XamlXmlWriter cannot write value '{0}' which contains significant white space in collection '{1}'.</source>
        <target state="new">XamlXmlWriter cannot write value '{0}' which contains significant white space in collection '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WhitespaceAfterME">
        <source>White space is not allowed after end of markup extension.</source>
        <target state="new">White space is not allowed after end of markup extension.</target>
        <note />
      </trans-unit>
      <trans-unit id="WriterIsClosed">
        <source>An attempt was made to write to a XamlWriter that has had its Closed method called.</source>
        <target state="new">An attempt was made to write to a XamlWriter that has had its Closed method called.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRChoiceAfterFallback">
        <source>Choice cannot follow a Fallback.</source>
        <target state="new">Choice cannot follow a Fallback.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRChoiceNotFound">
        <source>AlternateContent must contain one or more Choice elements.</source>
        <target state="new">AlternateContent must contain one or more Choice elements.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRChoiceOnlyInAC">
        <source>Choice is valid only in AlternateContent.</source>
        <target state="new">Choice is valid only in AlternateContent.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRCompatCycle">
        <source>There is a cycle of XML compatibility definitions, such that namespace '{0}' overrides itself. This could be due to inconsistent XmlnsCompatibilityAttributes in different assemblies. Please change the definitions to eliminate this cycle, or pass a non-conflicting set of Reference Assemblies in the XamlSchemaContext constructor.</source>
        <target state="new">There is a cycle of XML compatibility definitions, such that namespace '{0}' overrides itself. This could be due to inconsistent XmlnsCompatibilityAttributes in different assemblies. Please change the definitions to eliminate this cycle, or pass a non-conflicting set of Reference Assemblies in the XamlSchemaContext constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRDuplicatePreserve">
        <source>Duplicate Preserve declaration for element '{1}' in namespace '{0}'.</source>
        <target state="new">Duplicate Preserve declaration for element '{1}' in namespace '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRDuplicateProcessContent">
        <source>Duplicate ProcessContent declaration for element '{1}' in namespace '{0}'.</source>
        <target state="new">Duplicate ProcessContent declaration for element '{1}' in namespace '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRDuplicateWildcardPreserve">
        <source>Duplicate wildcard Preserve declaration for namespace '{0}'.</source>
        <target state="new">Duplicate wildcard Preserve declaration for namespace '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRDuplicateWildcardProcessContent">
        <source>Duplicate wildcard ProcessContent declaration for namespace '{0}'.</source>
        <target state="new">Duplicate wildcard ProcessContent declaration for namespace '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRFallbackOnlyInAC">
        <source>Fallback is valid only in AlternateContent.</source>
        <target state="new">Fallback is valid only in AlternateContent.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRInvalidACChild">
        <source>'{0}' element is not a valid child of AlternateContent. Only Choice and Fallback elements are valid children of an AlternateContent element.</source>
        <target state="new">'{0}' element is not a valid child of AlternateContent. Only Choice and Fallback elements are valid children of an AlternateContent element.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRInvalidAttribInElement">
        <source>'{0}' attribute is not valid for '{1}' element.</source>
        <target state="new">'{0}' attribute is not valid for '{1}' element.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRInvalidFormat">
        <source>'{0}' format is not valid.</source>
        <target state="new">'{0}' format is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRInvalidPreserve">
        <source>Cannot have both a specific and a wildcard Preserve declaration for namespace '{0}'.</source>
        <target state="new">Cannot have both a specific and a wildcard Preserve declaration for namespace '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRInvalidProcessContent">
        <source>Cannot have both a specific and a wildcard ProcessContent declaration for namespace '{0}'.</source>
        <target state="new">Cannot have both a specific and a wildcard ProcessContent declaration for namespace '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRInvalidRequiresAttribute">
        <source>Requires attribute must contain a valid namespace prefix.</source>
        <target state="new">Requires attribute must contain a valid namespace prefix.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRInvalidXMLName">
        <source>'{0}' attribute value is not a valid XML name.</source>
        <target state="new">'{0}' attribute value is not a valid XML name.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRMultipleFallbackFound">
        <source>AlternateContent must contain only one Fallback element.</source>
        <target state="new">AlternateContent must contain only one Fallback element.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRMustUnderstandFailed">
        <source>MustUnderstand condition failed on namespace '{0}'.</source>
        <target state="new">MustUnderstand condition failed on namespace '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRNSPreserveNotIgnorable">
        <source>'{0}' namespace cannot preserve items; it must be declared Ignorable first.</source>
        <target state="new">'{0}' namespace cannot preserve items; it must be declared Ignorable first.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRNSProcessContentNotIgnorable">
        <source>'{0}' namespace cannot process content; it must be declared Ignorable first.</source>
        <target state="new">'{0}' namespace cannot process content; it must be declared Ignorable first.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRRequiresAttribNotFound">
        <source>Choice must contain a Requires attribute.</source>
        <target state="new">Choice must contain a Requires attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRUndefinedPrefix">
        <source>'{0}' prefix is not defined.</source>
        <target state="new">'{0}' prefix is not defined.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRUnknownCompatAttrib">
        <source>Unrecognized compatibility attribute '{0}'.</source>
        <target state="new">Unrecognized compatibility attribute '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XCRUnknownCompatElement">
        <source>Unrecognized Compatibility element '{0}'.</source>
        <target state="new">Unrecognized Compatibility element '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XClassMustMatchRootInstance">
        <source>Specified class name '{0}' doesn't match actual root instance type '{1}'. Remove the Class directive or provide an instance via XamlObjectWriterSettings.RootObjectInstance.</source>
        <target state="new">Specified class name '{0}' doesn't match actual root instance type '{1}'. Remove the Class directive or provide an instance via XamlObjectWriterSettings.RootObjectInstance.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlFactoryInvalidXamlNode">
        <source>Unexpected XAML node type '{0}' from XamlReader in XamlFactory.</source>
        <target state="new">Unexpected XAML node type '{0}' from XamlReader in XamlFactory.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlMarkupExtensionWriterCannotSetSchemaContext">
        <source>Cannot set SchemaContext on XamlMarkupExtensionWriter.</source>
        <target state="new">Cannot set SchemaContext on XamlMarkupExtensionWriter.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlMarkupExtensionWriterCannotWriteNonstringValue">
        <source>Cannot write a value that is not a string.</source>
        <target state="new">Cannot write a value that is not a string.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlMarkupExtensionWriterDuplicateMember">
        <source>The member '{0}' has already been written.</source>
        <target state="new">The member '{0}' has already been written.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlMarkupExtensionWriterInputInvalid">
        <source>Errors detected in input.</source>
        <target state="new">Errors detected in input.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlTypeNameCannotGetPrefix">
        <source>Cannot convert this XamlTypeName instance to a string because the provided INamespacePrefixLookup could not generate a prefix for the namespace '{0}'.</source>
        <target state="new">Cannot convert this XamlTypeName instance to a string because the provided INamespacePrefixLookup could not generate a prefix for the namespace '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlTypeNameNameIsNullOrEmpty">
        <source>Cannot convert this XamlTypeName instance to a string because the Name property is null or empty. Set the Name property before calling XamlTypeName.ToString.</source>
        <target state="new">Cannot convert this XamlTypeName instance to a string because the Name property is null or empty. Set the Name property before calling XamlTypeName.ToString.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlTypeNameNamespaceIsNull">
        <source>Cannot convert this XamlTypeName instance to a string because the Namespace property is null. Set the Namespace property before calling XamlTypeName.ToString.</source>
        <target state="new">Cannot convert this XamlTypeName instance to a string because the Namespace property is null. Set the Namespace property before calling XamlTypeName.ToString.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlXmlWriterCannotWriteNonstringValue">
        <source>Cannot write a value that is not a string.</source>
        <target state="new">Cannot write a value that is not a string.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlXmlWriterDuplicateMember">
        <source>The member '{0}' has already been written.</source>
        <target state="new">The member '{0}' has already been written.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlXmlWriterIsObjectFromMemberSetForArraysOrNonCollections">
        <source>The argument isObjectFromMember can only be set to true when the type is a collection.</source>
        <target state="new">The argument isObjectFromMember can only be set to true when the type is a collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlXmlWriterNamespaceAlreadyHasPrefixInCurrentScope">
        <source>Namespace '{0}' already has a prefix defined in current scope.</source>
        <target state="new">Namespace '{0}' already has a prefix defined in current scope.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlXmlWriterPrefixAlreadyDefinedInCurrentScope">
        <source>The prefix '{0}' is already defined in current scope.</source>
        <target state="new">The prefix '{0}' is already defined in current scope.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlXmlWriterWriteNotSupportedInCurrentState">
        <source>Unable to call '{0}' in current state.</source>
        <target state="new">Unable to call '{0}' in current state.</target>
        <note />
      </trans-unit>
      <trans-unit id="XamlXmlWriterWriteObjectNotSupportedInCurrentState">
        <source>Unable to call WriteObject with isObjectFromMember set to true in current state.</source>
        <target state="new">Unable to call WriteObject with isObjectFromMember set to true in current state.</target>
        <note />
      </trans-unit>
      <trans-unit id="XaslTypePropertiesNotImplemented">
        <source>Need to implement public/internal sorting.</source>
        <target state="new">Need to implement public/internal sorting.</target>
        <note />
      </trans-unit>
      <trans-unit id="XmlDataNull">
        <source>The value for XmlData property '{0}' is null or not IXmlSerializable.</source>
        <target state="new">The value for XmlData property '{0}' is null or not IXmlSerializable.</target>
        <note />
      </trans-unit>
      <trans-unit id="XmlValueNotReader">
        <source>The value for XmlData property '{0}' is not an XmlReader.</source>
        <target state="new">The value for XmlData property '{0}' is not an XmlReader.</target>
        <note />
      </trans-unit>
      <trans-unit id="XmlnsCompatCycle">
        <source>There is a cycle of XmlnsCompatibleWithAttribute definitions in assembly '{0}', such that namespace '{1}' overrides itself. Change the definitions to eliminate this cycle.</source>
        <target state="new">There is a cycle of XmlnsCompatibleWithAttribute definitions in assembly '{0}', such that namespace '{1}' overrides itself. Change the definitions to eliminate this cycle.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>