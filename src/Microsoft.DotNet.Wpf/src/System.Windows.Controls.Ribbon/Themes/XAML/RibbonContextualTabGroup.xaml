<!-- [[Generic]] -->

   <!--=================================================================
                RibbonContextualTabGroupItemsControl
            ==================================================================-->

    <Style x:Key="{x:Type ribbon:RibbonContextualTabGroupItemsControl}"  TargetType="{x:Type ribbon:RibbonContextualTabGroupItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonContextualTabGroupItemsControl}">
                    <Border Background="{TemplateBinding Background}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--=================================================================
                RibbonContextualTabGroup
        ==================================================================-->

    <RadialGradientBrush x:Key="ContextualTabGroupHeaderOverlayBrushKey" GradientOrigin="0.5,1" Center="0.5,1" RadiusY="1">
        <GradientStop Offset="0" Color="#FFFFFFFF" />
        <GradientStop Offset="1" Color="#77FFFFFF"/>
    </RadialGradientBrush>
    
    <Style x:Key="{x:Type ribbon:RibbonContextualTabGroup}" TargetType="{x:Type ribbon:RibbonContextualTabGroup}">
#ifdef Net45
        <Setter Property="Height" Value="{Binding Path=(SystemParameters.WindowCaptionHeight)}" />
#else
        <Setter Property="Height" Value="{Binding Source={x:Static windows:SystemParameters2.Current}, Path=WindowCaptionHeight}" />
#endif
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ribbon:RibbonContextualTabGroup}">
                <ControlTemplate.Resources>
                    <DataTemplate DataType="{x:Type system:String}">
                        <TextBlock Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis"/>
                    </DataTemplate>
                </ControlTemplate.Resources>
                <Border x:Name="OuterBorder"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2,2,0,0"
#ifdef Net40    
                        RenderOptions.ClearTypeHint="Enabled"
#endif        
                        >
                        <Border x:Name="InnerBorder"
                                Background="{StaticResource ContextualTabGroupHeaderOverlayBrushKey}"
                                BorderBrush="{TemplateBinding Background}"
                                BorderThickness="1,1,1,2"
                                CornerRadius="2,2,0,0">
                            <ContentPresenter ContentSource="Header" VerticalAlignment="Center" Margin="2,0,2,0"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
#ifdef Net45
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
#else
                        <DataTrigger Binding="{Binding Path=HighContrast, Source={x:Static windows:SystemParameters2.Current}}" Value="True">
#endif
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="2,2,2,3" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="OuterBorder" Property="CornerRadius" Value="0" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  
