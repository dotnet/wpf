<Project>
  <!-- Set code coverage properties that reference properties not available in Directory.Build.props -->
  <PropertyGroup Condition="'$(Coverage)' == 'true'">
    <CoverletOutput>$(TargetDir)coverage\$(MSBuildProjectName).coverage</CoverletOutput>
    <!-- https://github.com/tonerdo/coverlet/issues/363 -->
    <DeterministicSourcePaths>false</DeterministicSourcePaths>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsTestProject)' == 'true'">
    <TestRunnerAdditionalArguments>$(TestRunnerAdditionalArguments) --hangdump</TestRunnerAdditionalArguments>
    <TestRunnerAdditionalArguments>$(TestRunnerAdditionalArguments) --hangdump-timeout 10min</TestRunnerAdditionalArguments>
    <TestRunnerAdditionalArguments>$(TestRunnerAdditionalArguments) --crashdump</TestRunnerAdditionalArguments>
  </PropertyGroup>

  <ItemGroup Condition="'$(IsTestProject)' == 'true'">
    <PackageReference Include="Microsoft.Testing.Extensions.HangDump" Version="$(MicrosoftTestingPlatformVersion)" />
    <PackageReference Include="Microsoft.Testing.Extensions.CrashDump" Version="$(MicrosoftTestingPlatformVersion)" />
  </ItemGroup>

  <Target Name="InstrumentModulesNoBuild" BeforeTargets="RunTests" Condition="'$(IsTestProject)' == 'true'">
    <Coverlet.MSbuild.Tasks.InstrumentationTask
      Condition="'$(CollectCoverage)' == 'true'"
      Path="$(TargetPath)"
      Include="$(Include)"
      IncludeDirectory="$(IncludeDirectory)"
      Exclude="$(Exclude)"
      ExcludeByFile="$(ExcludeByFile)"
      ExcludeByAttribute="$(ExcludeByAttribute)"
      IncludeTestAssembly="$(IncludeTestAssembly)"
      SingleHit="$(SingleHit)"
      MergeWith="$(MergeWith)"
      UseSourceLink="$(UseSourceLink)" >
      <Output TaskParameter="InstrumenterState" PropertyName="InstrumenterState"/>
    </Coverlet.MSbuild.Tasks.InstrumentationTask>
  </Target>

  <Target Name="GenerateCoverageResult" AfterTargets="RunTests" Condition="'$(IsTestProject)' == 'true'">
    <Coverlet.MSbuild.Tasks.CoverageResultTask
      Condition="'$(CollectCoverage)' == 'true'"
      Output="$(CoverletOutput)"
      OutputFormat="$(CoverletOutputFormat)"
      Threshold="$(Threshold)"
      ThresholdType="$(ThresholdType)"
      ThresholdStat="$(ThresholdStat)"
      InstrumenterState="$(InstrumenterState)"/>
  </Target>

</Project>