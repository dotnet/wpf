<Project>
  <PropertyGroup Condition="'$(WpfTest)'=='true' Or '$(IsTestProject)'=='true'">
    <RuntimeIdentifier>$(WpfRuntimeIdentifier)</RuntimeIdentifier>
  </PropertyGroup>
  <!-- Arcade SDK defaults to AnyCpu ~= x64. In WPF, we will map AnyCpu => x86 instead -->
  <PropertyGroup Condition="'$(IsTestProject)' == 'true' or '$(WpfTest)'=='true'">
    <TestArchitectures Condition="'$(PlatformTarget)' == '' or '$(PlatformTarget)' == 'AnyCpu'">x86</TestArchitectures>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <IsSelfContained>true</IsSelfContained>
  </PropertyGroup>

  <ItemGroup Condition="'$(IsTestProject)' == 'true' or '$(WpfTest)'=='true'">
    <!-- 
      Only reference Microsoft.DotNet.Wpf.DncEng when building tests in dotnet/wpf
      This references is not needed when building tests in dotnet-wpf-int
    -->
    <PackageReference Include="runtime.$(RuntimeIdentifier).$(DncEngTransportPackageName)"
                      Condition="'$(RepositoryName)'=='wpf'"
                      Version="$(MicrosoftDotNetWpfDncEngVersion)">
      <CopyLocal>true</CopyLocal>
      <GeneratePathProperty>true</GeneratePathProperty>
    </PackageReference>
    
    <!-- 
      PackageReference from individual WPF projects here 
    -->
    <PackageReference Include="$(SystemIOPackagingPackage)" Version="$(SystemIOPackagingVersion)" CopyLocal="true" />
    <PackageReference Include="Microsoft.Win32.Registry" Version="$(MicrosoftWin32RegistryPackageVersion)" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="$(SystemConfigurationConfigurationManagerPackageVersion)" CopyLocal="true"  />
    <PackageReference Include="System.Diagnostics.EventLog" Version="$(SystemDiagnosticsEventLogPackageVersion)" CopyLocal="true" />
    <PackageReference Include="System.Security.Cryptography.Xml" Version="$(SystemSecurityCryptographyXmlPackageVersion)" CopyLocal="true" />
    <PackageReference Include="System.Windows.Extensions" Version="$(SystemWindowsExtensionsPackageVersion)" CopyLocal="true" />

    <PackageReference Include="System.Security.AccessControl" Version="$(SystemSecurityAccessControlPackageVersion)" CopyLocal="true" />
    <PackageReference Include="System.Security.Principal.Windows" Version="$(SystemSecurityPrincipalWindowsPackageVersion)" CopyLocal="true" />

    <!-- These exist to ensure that dependencies (esp. native ones) are binplaced with tests correctly -->
    <None Condition="'$(RuntimeIdentifier)'=='win-x64' And '$(Configuration)' != 'Debug'"
          Include="$(Pkgruntime_win-x64_Microsoft_DotNet_Wpf_DncEng)\runtimes\$(RuntimeIdentifier)\native\*.dll"
          CopyToOutputDirectory="PreserveNewest"/>
    <None Condition="'$(RuntimeIdentifier)'=='win-x64' And '$(Configuration)' == 'Debug'"
      Include="$(Pkgruntime_win-x64_Microsoft_DotNet_Wpf_DncEng_Debug)\runtimes\$(RuntimeIdentifier)\native\*.dll"
      CopyToOutputDirectory="PreserveNewest"/>

    <None Condition="'$(RuntimeIdentifier)'=='win-x86' And '$(Configuration)' != 'Debug'"
           Include="$(Pkgruntime_win-x86_Microsoft_DotNet_Wpf_DncEng)\runtimes\$(RuntimeIdentifier)\native\*.dll"
          CopyToOutputDirectory="PreserveNewest"/>
    <None Condition="'$(RuntimeIdentifier)'=='win-x86' And '$(Configuration)' == 'Debug'"
       Include="$(Pkgruntime_win-x86_Microsoft_DotNet_Wpf_DncEng_Debug)\runtimes\$(RuntimeIdentifier)\native\*.dll"
      CopyToOutputDirectory="PreserveNewest"/>

    <ProjectReference Include="@(WpfProjectPath->'%(ProjectPath)')" >
      <Private>True</Private>
      <OutputItemType>_wpfProjectReferenceLocallyBuildAssemblies</OutputItemType>
    </ProjectReference>
  </ItemGroup>
  <!-- 
    This target ensures that Microsoft.DotNet.Wpf.DncEng would not inadvertently over-supply references that 
    are already satisfied by ProjectReference's from within this repo. This should almost never happen, except
    when $(MicrosoftDotNetWpfDncEngVersion) is set to something really old (something that was built <= 05/22/2019)
  -->
  <Target
    Name="LimitMicrosoftDotNetDncEngReferences"
    AfterTargets="ResolveTargetingPacks"
    Returns="@(Reference)"
    Condition="'$(WpfTest)'=='true' or '$(IsTestProject)'=='true'">

    <ItemGroup>
      <_microsoftDotNetDncEngRefs Remove="@(_microsoftDotNetDncEngRefs)" />
      <_microsoftDotNetDncEngRefs Include="@(Reference)"
                                  Condition="'%(Reference.NuGetPackageId)'=='runtime.$(RuntimeIdentifier).Microsoft.DotNet.Wpf.DncEng'">
        <OriginalPath>%(Reference.Identity)</OriginalPath>
      </_microsoftDotNetDncEngRefs>
    </ItemGroup>

    <ItemGroup>
      <_microsoftDotNetDncEngReferences Remove="@(_microsoftDotNetDncEngReferences)" />
    </ItemGroup>
    <FilterItem1ByItem2 Item1="@(_microsoftDotNetDncEngRefs->'%(FileName)')"
                        Item2="@(_wpfProjectReferenceLocallyBuildAssemblies->'%(FileName)')"
                        Metadata2="Identity"
                        PreserveItem1Metadata="true">
      <Output ItemName="_microsoftDotNetDncEngReferencesToAvoid" TaskParameter="Result" />
    </FilterItem1ByItem2>

    <ItemGroup>
      <Reference Remove="@(_microsoftDotNetDncEngReferencesToAvoid->'%(OriginalPath)')"/>
    </ItemGroup>
  </Target>

</Project>
