<Project>
  <Import Project="Microsoft.WinFX.targets" />

  <ItemGroup Condition=" ('$(EnableDefaultItems)' == 'true') And ('$(UseWPF)' == 'true') And ('$(_TargetFrameworkVersionWithoutV)' != '') And 
                         ('$(_TargetFrameworkVersionWithoutV)' >= '$(_WindowsDesktopSdkTargetFrameworkVersionFloor)')">
    
    <!-- In the WindowsDesktop .props, we globbed all .xaml files as Page items.  If any of those files are included
         as Resource, Content, or None items, then remove them from the Page items. -->
    <Page Remove="@(Resource);@(Content);@(None)"
          Condition="'$(EnableDefaultPageItems)' != 'false'" />
  </ItemGroup>

  <!-- Generate error if there are duplicate page items.  The task comes from the .NET SDK, and this target follows
       the pattern in the CheckForDuplicateItems task, where the .NET SDK checks for duplicate items for the item
       types it knows about. -->
  <Target Name="CheckForDuplicatePageItems" 
          BeforeTargets="_CheckForInvalidConfigurationAndPlatform;CoreCompile"
          DependsOnTargets="CheckForDuplicateItems"
          Condition="('$(UseWPF)' == 'true') And ('$(_TargetFrameworkVersionWithoutV)' != '') And ('$(_TargetFrameworkVersionWithoutV)' >= '$(_WindowsDesktopSdkTargetFrameworkVersionFloor)')">

    <CheckForDuplicateItems
      Items="@(Page)"
      ItemName="Page"
      DefaultItemsEnabled="$(EnableDefaultItems)"
      DefaultItemsOfThisTypeEnabled="$(EnableDefaultPageItems)"
      PropertyNameToDisableDefaultItems="EnableDefaultPageItems"
      MoreInformationLink="$(DefaultItemsMoreInformationLink)"
      ContinueOnError="$(CheckForDuplicateItemsContinueOnError)">
      <Output TaskParameter="DeduplicatedItems" ItemName="DeduplicatedPageItems" />
    </CheckForDuplicateItems>

    <ItemGroup Condition="'$(DesignTimeBuild)' == 'true' And '@(DeduplicatedPageItems)' != ''">
      <Page Remove="@(Page)" />
      <Page Include="@(DeduplicatedPageItems)" />
    </ItemGroup>

  </Target>

  <!-- 
    This warning can be suppressed by setting $(MSBuildWarningsAsMessages) property, like this:
    <PropertyGroup>
      <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);NETSDK1106</MSBuildWarningsAsMessages>
    </PropertyGroup>
  --> 
  <Target Name="_WindowsDesktopFrameworkRequiresUseWpfOrUseWindowsForms"
          BeforeTargets="_CheckForInvalidConfigurationAndPlatform"
          Condition="('$(_TargetFrameworkVersionWithoutV)' != '') And ('$(_TargetFrameworkVersionWithoutV)' >= '$(_WindowsDesktopSdkTargetFrameworkVersionFloor)')">
    <NetSdkWarning ResourceName="WindowsDesktopFrameworkRequiresUseWpfOrUseWindowsForms" 
                   Condition="'$(UseWpf)' != 'true' And '$(UseWindowsForms)' != 'true'"/>
  </Target>

    <!-- 
    This warning can be suppressed by setting $(MSBuildWarningsAsMessages) property, like this:
    <PropertyGroup>
      <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);NETSDK1105</MSBuildWarningsAsMessages>
    </PropertyGroup>
  --> 
  <Target Name="_WindowsDesktopFrameworkRequiresVersion30"
        BeforeTargets="_CheckForInvalidConfigurationAndPlatform"
        Condition="('$(TargetFrameworkIdentifier)' == '.NETCoreApp') And 
                  ('$(_TargetFrameworkVersionWithoutV)' != '') And ('$(_TargetFrameworkVersionWithoutV)' &lt; '$(_WindowsDesktopSdkTargetFrameworkVersionFloor)')">
    <NetSdkWarning ResourceName="WindowsDesktopFrameworkRequiresVersion30" />
  </Target>
</Project>
